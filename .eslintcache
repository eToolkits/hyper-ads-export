[{"D:\\Monster\\tetttt\\react-electron\\src\\index.js":"1","D:\\Monster\\tetttt\\react-electron\\src\\components\\Login\\index.jsx":"2","D:\\Monster\\tetttt\\react-electron\\src\\constant\\index.js":"3","D:\\Monster\\tetttt\\react-electron\\src\\Router\\PrivateRouter\\index.jsx":"4","D:\\Monster\\tetttt\\react-electron\\src\\Router\\index.jsx":"5","D:\\Monster\\tetttt\\react-electron\\src\\container\\Authentication\\index.jsx":"6","D:\\Monster\\tetttt\\react-electron\\src\\reducer\\path.js":"7","D:\\Monster\\tetttt\\react-electron\\src\\screen\\Authentication\\index.jsx":"8","D:\\Monster\\tetttt\\react-electron\\src\\reducer\\file.js":"9","D:\\Monster\\tetttt\\react-electron\\src\\reducer\\index.js":"10","D:\\Monster\\tetttt\\react-electron\\src\\App.js":"11"},{"size":716,"mtime":1636544226152,"results":"12","hashOfConfig":"13"},{"size":6130,"mtime":1636540725253,"results":"14","hashOfConfig":"13"},{"size":76,"mtime":1636527529559,"results":"15","hashOfConfig":"13"},{"size":530,"mtime":1636544189366,"results":"16","hashOfConfig":"13"},{"size":248,"mtime":1636543675147,"results":"17","hashOfConfig":"13"},{"size":362,"mtime":1636527529559,"results":"18","hashOfConfig":"13"},{"size":290,"mtime":1636527529559,"results":"19","hashOfConfig":"13"},{"size":284,"mtime":1636531120257,"results":"20","hashOfConfig":"13"},{"size":287,"mtime":1636527529559,"results":"21","hashOfConfig":"13"},{"size":186,"mtime":1636527529559,"results":"22","hashOfConfig":"13"},{"size":204,"mtime":1636543648205,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qzuj7t",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Monster\\tetttt\\react-electron\\src\\index.js",[],"D:\\Monster\\tetttt\\react-electron\\src\\components\\Login\\index.jsx",["50"],"import React, { useState } from \"react\";\r\nimport {\r\n    Flex,\r\n    Box,\r\n    Heading,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    CircularProgress,\r\n    Text,\r\n    ErrorMessage,\r\n    InputGroup,\r\n    InputRightElement,\r\n} from \"@chakra-ui/react\";\r\nimport { ViewOffIcon, ViewIcon } from \"@chakra-ui/icons\";\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            // await userLogin({ email, password });\r\n            // setIsLoggedIn(true);\r\n            // setIsLoading(false);\r\n            // setShowPassword(false);\r\n            console.log(\"login\")\r\n        } catch (error) {\r\n            setError(\"Invalid username or password\");\r\n            setIsLoading(false);\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            setShowPassword(false);\r\n        }\r\n    };\r\n\r\n    const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n    return (\r\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n            <Box\r\n                p={8}\r\n                maxWidth=\"500px\"\r\n                borderWidth={1}\r\n                borderRadius={8}\r\n                boxShadow=\"lg\"\r\n            >\r\n                {isLoggedIn ? (\r\n                    <Box textAlign=\"center\">\r\n                        <Text>{email} logged in!</Text>\r\n                        <Button\r\n                            variantColor=\"orange\"\r\n                            variant=\"outline\"\r\n                            width=\"full\"\r\n                            mt={4}\r\n                            onClick={() => setIsLoggedIn(false)}\r\n                        >\r\n                            Sign out\r\n                        </Button>\r\n                    </Box>\r\n                ) : (\r\n                    <>\r\n                        <Box textAlign=\"center\">\r\n                            <Heading>Login</Heading>\r\n                        </Box>\r\n                        <Box my={4} textAlign=\"left\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                {error && <ErrorMessage message={error} />}\r\n                                <FormControl isRequired>\r\n                                    <FormLabel>Email</FormLabel>\r\n                                    <Input\r\n                                        type=\"email\"\r\n                                        placeholder=\"test@test.com\"\r\n                                        size=\"lg\"\r\n                                        onChange={(event) =>\r\n                                            setEmail(event.currentTarget.value)\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl isRequired mt={6}>\r\n                                    <FormLabel>Password</FormLabel>\r\n                                    <InputGroup>\r\n                                        <Input\r\n                                            type={\r\n                                                showPassword\r\n                                                    ? \"text\"\r\n                                                    : \"password\"\r\n                                            }\r\n                                            placeholder=\"*******\"\r\n                                            size=\"lg\"\r\n                                            onChange={(event) =>\r\n                                                setPassword(\r\n                                                    event.currentTarget.value\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                        <InputRightElement width=\"3rem\">\r\n                                            <Button\r\n                                                h=\"1.5rem\"\r\n                                                size=\"sm\"\r\n                                                onClick={\r\n                                                    handlePasswordVisibility\r\n                                                }\r\n                                            >\r\n                                                {showPassword ? (\r\n                                                    <ViewOffIcon />\r\n                                                ) : (\r\n                                                    <ViewIcon />\r\n                                                )}\r\n                                            </Button>\r\n                                        </InputRightElement>\r\n                                    </InputGroup>\r\n                                </FormControl>\r\n                                <Button\r\n                                    colorScheme=\"teal\"\r\n                                    variant=\"outline\"\r\n                                    type=\"submit\"\r\n                                    width=\"full\"\r\n                                    mt={4}\r\n                                >\r\n                                    {isLoading ? (\r\n                                        <CircularProgress\r\n                                            isIndeterminate\r\n                                            size=\"24px\"\r\n                                            color=\"teal\"\r\n                                        />\r\n                                    ) : (\r\n                                        \"Sign In\"\r\n                                    )}\r\n                                </Button>\r\n                            </form>\r\n                        </Box>\r\n                    </>\r\n                )}\r\n            </Box>\r\n        </Flex>\r\n    );\r\n}\r\nexport default Login;","D:\\Monster\\tetttt\\react-electron\\src\\constant\\index.js",[],"D:\\Monster\\tetttt\\react-electron\\src\\Router\\PrivateRouter\\index.jsx",[],"D:\\Monster\\tetttt\\react-electron\\src\\Router\\index.jsx",[],"D:\\Monster\\tetttt\\react-electron\\src\\container\\Authentication\\index.jsx",["51"],"D:\\Monster\\tetttt\\react-electron\\src\\reducer\\path.js",[],["52","53"],"D:\\Monster\\tetttt\\react-electron\\src\\screen\\Authentication\\index.jsx",[],"D:\\Monster\\tetttt\\react-electron\\src\\reducer\\file.js",[],["54","55"],"D:\\Monster\\tetttt\\react-electron\\src\\reducer\\index.js",[],["56","57"],"D:\\Monster\\tetttt\\react-electron\\src\\App.js",[],{"ruleId":"58","severity":1,"message":"59","line":20,"column":12,"nodeType":"60","messageId":"61","endLine":20,"endColumn":20},{"ruleId":"58","severity":1,"message":"62","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":17},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"63","replacedBy":"67"},{"ruleId":"65","replacedBy":"68"},{"ruleId":"63","replacedBy":"69"},{"ruleId":"65","replacedBy":"70"},"no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","no-native-reassign",["71"],"no-negated-in-lhs",["72"],["71"],["72"],["71"],["72"],"no-global-assign","no-unsafe-negation"]