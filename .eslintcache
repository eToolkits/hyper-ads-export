[{"D:\\Tool\\hyper-ads-export\\src\\index.js":"1","D:\\Tool\\hyper-ads-export\\src\\reducer\\index.js":"2","D:\\Tool\\hyper-ads-export\\src\\constant\\index.js":"3","D:\\Tool\\hyper-ads-export\\src\\components\\Loading\\index.jsx":"4","D:\\Tool\\hyper-ads-export\\src\\action\\index.js":"5","D:\\Tool\\hyper-ads-export\\src\\container\\ChangeSounds\\index.jsx":"6","D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\styles.js":"7","D:\\Tool\\hyper-ads-export\\src\\function\\combineSingle.js":"8","D:\\Tool\\hyper-ads-export\\src\\services\\firebaseConfig.js":"9","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\index.jsx":"10","D:\\Tool\\hyper-ads-export\\src\\components\\GameItem\\index.jsx":"11","D:\\Tool\\hyper-ads-export\\src\\container\\Export\\index.jsx":"12","D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\index.jsx":"13","D:\\Tool\\hyper-ads-export\\src\\App.js":"14","D:\\Tool\\hyper-ads-export\\src\\Router\\PrivateRouter\\index.jsx":"15","D:\\Tool\\hyper-ads-export\\src\\container\\ChangeAssets\\index.jsx":"16","D:\\Tool\\hyper-ads-export\\src\\components\\DragDrop\\index.jsx":"17","D:\\Tool\\hyper-ads-export\\src\\Theme\\index.js":"18","D:\\Tool\\hyper-ads-export\\src\\Utils\\index.js":"19","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeAssets\\index.jsx":"20","D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\index.jsx":"21","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeMap\\index.jsx":"22","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\SelectIdea\\index.jsx":"23","D:\\Tool\\hyper-ads-export\\src\\pages\\Home\\index.jsx":"24","D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\styles.js":"25","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeSounds\\index.jsx":"26","D:\\Tool\\hyper-ads-export\\src\\hook\\useChangeMap.jsx":"27"},{"size":847,"mtime":1639713502746,"results":"28","hashOfConfig":"29"},{"size":236,"mtime":1639713502754,"results":"30","hashOfConfig":"29"},{"size":469,"mtime":1641277196962,"results":"31","hashOfConfig":"29"},{"size":617,"mtime":1640166863396,"results":"32","hashOfConfig":"29"},{"size":945,"mtime":1639713502737,"results":"33","hashOfConfig":"29"},{"size":6803,"mtime":1641358293115,"results":"34","hashOfConfig":"29"},{"size":525,"mtime":1640137009196,"results":"35","hashOfConfig":"29"},{"size":18557,"mtime":1641292430065,"results":"36","hashOfConfig":"29"},{"size":916,"mtime":1640254604341,"results":"37","hashOfConfig":"29"},{"size":1800,"mtime":1641358137369,"results":"38","hashOfConfig":"29"},{"size":8427,"mtime":1641355650002,"results":"39","hashOfConfig":"29"},{"size":3245,"mtime":1641292434827,"results":"40","hashOfConfig":"29"},{"size":2476,"mtime":1640140445507,"results":"41","hashOfConfig":"29"},{"size":721,"mtime":1641292869683,"results":"42","hashOfConfig":"29"},{"size":2305,"mtime":1641292879822,"results":"43","hashOfConfig":"29"},{"size":7749,"mtime":1641358249708,"results":"44","hashOfConfig":"29"},{"size":1985,"mtime":1641352534702,"results":"45","hashOfConfig":"29"},{"size":310,"mtime":1639713502736,"results":"46","hashOfConfig":"29"},{"size":1723,"mtime":1641357042975,"results":"47","hashOfConfig":"29"},{"size":283,"mtime":1641358177838,"results":"48","hashOfConfig":"29"},{"size":4018,"mtime":1639713502740,"results":"49","hashOfConfig":"29"},{"size":260,"mtime":1641277196971,"results":"50","hashOfConfig":"29"},{"size":6019,"mtime":1639713502749,"results":"51","hashOfConfig":"29"},{"size":8019,"mtime":1641356045335,"results":"52","hashOfConfig":"29"},{"size":1815,"mtime":1639713502741,"results":"53","hashOfConfig":"29"},{"size":320,"mtime":1639713502748,"results":"54","hashOfConfig":"29"},{"size":837,"mtime":1641358189845,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1icqvp2",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Tool\\hyper-ads-export\\src\\index.js",[],"D:\\Tool\\hyper-ads-export\\src\\reducer\\index.js",[],["123","124"],"D:\\Tool\\hyper-ads-export\\src\\constant\\index.js",[],"D:\\Tool\\hyper-ads-export\\src\\components\\Loading\\index.jsx",[],["125","126"],"D:\\Tool\\hyper-ads-export\\src\\action\\index.js",[],"D:\\Tool\\hyper-ads-export\\src\\container\\ChangeSounds\\index.jsx",["127","128","129"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Box,\r\n  Flex,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport { ExportSquare, Map1, GalleryEdit } from 'iconsax-react';\r\nimport DragDrop from '../../components/DragDrop';\r\n// import Loading from '../../components/Loading';\r\nimport {\r\n  readInFile,\r\n  writeInFile,\r\n  convertFileToArray,\r\n  convertAssetToBase64,\r\n  convertArrayToFile,\r\n} from './../../Utils';\r\nimport { TYPE_AUDIO } from '../../constant';\r\nimport useChangeMap from '../../hook/useChangeMap';\r\nconst fs = window.require('fs');\r\n\r\nconst TempFolder = process.env.REACT_APP_FOLDER_TEMPORAL;\r\n\r\nconst ChangeSoundsContainer = (props) => {\r\n  const { selectedGame } = props;\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const params = useParams();\r\n  const isChangeMap = useChangeMap();\r\n  const idgame = params.idgame;\r\n  const ididea = params.ididea;\r\n  const locationSaveFile = `${TempFolder}/Sound-${ididea}.js`;\r\n  console.log('ChangeSoundsContainer loaded');\r\n\r\n  const [variableListState, setVariableListState] = useState([]);\r\n\r\n  const handleFile = (data) => {\r\n    //convert sound drag to base64\r\n    var soundAsBase64 = convertAssetToBase64(data.file.path);\r\n    setVariableListState((pre) => {\r\n      pre[data.index].url = `data:audio/mpeg;base64,${soundAsBase64}`;\r\n      return pre;\r\n    });\r\n    const result = writeInFile(\r\n      locationSaveFile,\r\n      convertArrayToFile(variableListState)\r\n    );\r\n    result\r\n      ? toast({\r\n          title: `Save Asset succeslully!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'success',\r\n        })\r\n      : toast({\r\n          title: `Fail to seve Asset!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'error',\r\n        });\r\n  };\r\n  //save file before change route\r\n  const handleChangePage = (route) => {\r\n    const result = writeInFile(\r\n      locationSaveFile,\r\n      convertArrayToFile(variableListState)\r\n    );\r\n    result\r\n      ? toast({\r\n          title: `Save Asset succeslully!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'success',\r\n        })\r\n      : toast({\r\n          title: `Fail to seve Asset!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'error',\r\n        });\r\n    navigate(`${route}`);\r\n  };\r\n\r\n  //check recent file, transform data to render\r\n  useEffect(() => {\r\n    const recentFileEdit = fs\r\n      .readdirSync(TempFolder)\r\n      .filter(\r\n        (item) =>\r\n          item.toLowerCase().includes(`${ididea}`) &&\r\n          item.toLowerCase().includes(`sound`)\r\n      );\r\n    let variableList;\r\n    if (recentFileEdit.length > 0) {\r\n      const content = readInFile(`${TempFolder}/${recentFileEdit[0]}`);\r\n      variableList = convertFileToArray(content);\r\n    } else {\r\n      fs.readdirSync(TempFolder)\r\n        .filter((item) => !item.toLowerCase().includes(`${ididea}`))\r\n        .forEach((file) => {\r\n          fs.unlink(`./src/TempCombine/${file}`, (err) => {\r\n            if (err) {\r\n              console.error(err);\r\n              return;\r\n            }\r\n          });\r\n        });\r\n      const ideaSelect =\r\n        selectedGame.idea[\r\n          selectedGame?.idea?.findIndex((idea) => idea.id === ididea)\r\n        ];\r\n\r\n      const SoundFile = fs\r\n        .readdirSync(`${ideaSelect.linkBaseCode}`)\r\n        .filter((item) => item.toLowerCase().includes('sound'));\r\n\r\n      const contentSoundFile = fs.readFileSync(\r\n        `${ideaSelect.linkBaseCode}/${SoundFile[0]}`,\r\n        'utf8'\r\n      );\r\n      variableList = convertFileToArray(contentSoundFile);\r\n    }\r\n\r\n    //optimize performance\r\n    let dataTranformStateTemp = [];\r\n    variableList.map((item, index) => {\r\n      dataTranformStateTemp.push({\r\n        name: item[0],\r\n        url: item[1],\r\n      });\r\n      if (index == variableList.length - 1) {\r\n        setVariableListState((pre) => [...dataTranformStateTemp]);\r\n        dataTranformStateTemp = [];\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Box mb=\"5\">\r\n        <Box height=\"75vh\" overflowY=\"scroll\">\r\n          <Table w=\"100%\" my=\"5\" variant=\"striped\" colorScheme=\"gray\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th textAlign=\"center\">Index</Th>\r\n                <Th>Name Sound</Th>\r\n                <Th>Current Sound</Th>\r\n                <Th>New Sound</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {variableListState.map((item, index) => {\r\n                return (\r\n                  <Tr key={index}>\r\n                    <Td textAlign=\"center\">{index + 1}</Td>\r\n                    <Td>{item.name.slice(0, -3)}</Td>\r\n                    <Td>\r\n                      <audio controls>\r\n                        <source src={item.url} />\r\n                      </audio>\r\n                    </Td>\r\n                    <Td>\r\n                      <DragDrop\r\n                        text=\"asset\"\r\n                        handleFile={handleFile}\r\n                        indexFile={index}\r\n                        type={TYPE_AUDIO}\r\n                      />\r\n                    </Td>\r\n                  </Tr>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n        <Flex justifyContent=\"flex-end\" mt=\"40px\">\r\n          <Box>\r\n            <Button\r\n              colorScheme=\"green\"\r\n              rightIcon={<GalleryEdit size=\"20\" color=\"currentColor\" />}\r\n              onClick={() =>\r\n                handleChangePage(`/editgame/${idgame}/${ididea}/changeassets`)\r\n              }\r\n            >\r\n              Change Assets\r\n            </Button>{' '}\r\n            <Button\r\n              colorScheme=\"green\"\r\n              rightIcon={<Map1 size=\"20\" color=\"currentColor\" />}\r\n              onClick={() =>\r\n                handleChangePage(`/editgame/${idgame}/${ididea}/changemap`)\r\n              }\r\n              isDisabled={isChangeMap}\r\n            >\r\n              Change Map\r\n            </Button>{' '}\r\n            <Button\r\n              ml=\"5\"\r\n              colorScheme=\"green\"\r\n              rightIcon={<ExportSquare size=\"20\" color=\"currentColor\" />}\r\n              onClick={() =>\r\n                handleChangePage(`/export/${idgame}/${ididea}/false`)\r\n              }\r\n            >\r\n              Export Now\r\n            </Button>{' '}\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nChangeSoundsContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedGame: state.gameSelected,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(ChangeSoundsContainer);\r\n","D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\styles.js",[],"D:\\Tool\\hyper-ads-export\\src\\function\\combineSingle.js",["130","131","132","133"],"//requiring path and fs modules\r\nconst fs = window.require(\"fs\");\r\nconst TempFolder = process.env.REACT_APP_FOLDER_TEMPORAL;\r\nconst network = [\"AppLovin\", \"Google\", \"Unity\", \"Mintegral\", \"Iron\", \"Tiktok\"];\r\nconst date = new Date().toISOString().slice(0, 10).replace(\"-\", \"_\").replace(\"-\", \"_\");\r\n\r\nexport async function CombineAndExport({ nameGame, linkStoreAndroid, linkStoreIOS, linkBaseCode, listFileCombine, listFileNew, ideaName, directorySave }) {\r\n  //combineSingle\r\n  let mainFile;\r\n  const upFolder = `${directorySave}/Build`;\r\n  if (listFileNew.length >= 1) {\r\n    mainFile = fs.readFileSync(`${linkBaseCode}/index.html`, \"utf8\");\r\n    console.log(\"🚀 ~ file: combineSingle.js ~ line 13 ~ CombineAndExport ~ mainFile\", mainFile)\r\n\r\n    listFileNew.map(file => {\r\n      let codeInFile = fs.readFileSync(`${TempFolder}/${file}`, \"utf8\");\r\n      if (file.toLowerCase().includes(\"map\")) {\r\n        mainFile = mainFile.replace(\r\n          `<script src=\"map.json\"></script>`,\r\n          `<script>\\n var map = ${codeInFile}\\n</script>`\r\n        ).replace(\r\n          `this.load.tilemapTiledJSON('map', 'map.json')`,\r\n          `this.load.tilemapTiledJSON('map', map);\\n`\r\n        ).replace(\r\n          `this.load.tilemapTiledJSON('map', \"map.json\")`,\r\n          `this.load.tilemapTiledJSON('map', map);\\n`\r\n        )\r\n      } else if (file.toLowerCase().includes(\"image\")) {\r\n        mainFile = mainFile.replace(\r\n          `<script src=\"Image.js\"></script>`,\r\n          `<script>\\n${codeInFile}\\n</script>`\r\n        )\r\n      } else if (file.toLowerCase().includes(\"sound\")) {\r\n        mainFile = mainFile.replace(\r\n          `<script src=\"Sound.js\"></script>`,\r\n          `<script>\\n${codeInFile}\\n</script>`\r\n        )\r\n      }\r\n    })\r\n\r\n    listFileCombine.map(file => {\r\n      let codeInFile = fs.readFileSync(`${linkBaseCode}/${file}`, \"utf8\");\r\n      if (file.toLowerCase().includes(\"map\")) {\r\n        mainFile = mainFile.replace(\r\n          `<script src=\"map.json\"></script>`,\r\n          `<script> \\n var map = ${codeInFile}\\n</script>`\r\n        )\r\n      }\r\n      else if (file.toLowerCase().includes(\"image\")) {\r\n        mainFile = mainFile.replace(\r\n          `<script src=\"Image.js\"></script>`,\r\n          `<script>\\n${codeInFile}\\n</script>`\r\n        )\r\n      } else if (file.toLowerCase().includes(\"Sound\")) {\r\n        mainFile = mainFile.replace(\r\n          `<script src=\"Sound.js\"></script>`,\r\n          `<script>\\n${codeInFile}\\n</script>`\r\n        )\r\n      } else {\r\n        mainFile = mainFile.replace(\r\n          `<script src=\"${file}\"></script>`,\r\n          `<script>${codeInFile}</script>`\r\n        ).replace(\r\n          `this.load.tilemapTiledJSON('map', 'map.json')`,\r\n          `this.load.tilemapTiledJSON('map', map);\\n`\r\n        ).replace(\r\n          `this.load.tilemapTiledJSON('map', \"map.json\")`,\r\n          `this.load.tilemapTiledJSON('map', map);\\n`\r\n        )\r\n      }\r\n    });\r\n\r\n  } else {\r\n    //render form basecode\r\n    mainFile = fs.readFileSync(`${linkBaseCode}/index.html`, \"utf8\");\r\n    listFileCombine.map(file => {\r\n      let codeInFile = fs.readFileSync(`${linkBaseCode}/${file}`, \"utf8\");\r\n      if (file == \"map.json\") {\r\n        codeInFile = \"<script>\\nvar map = \" + codeInFile + \"\\n</script>\"\r\n        mainFile = mainFile.replace(\r\n          `<script src=\"map.json\"></script>`,\r\n          codeInFile\r\n        )\r\n      } else {\r\n        mainFile = mainFile.replace(\r\n          `<script src=\"${file}\"></script>`,\r\n          `<script>\\n${codeInFile}\\n</script>`\r\n        ).replace(\r\n          `this.load.tilemapTiledJSON('map', 'map.json')`,\r\n          `this.load.tilemapTiledJSON('map', map);\\n`\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  //check folder exists\r\n  try {\r\n    if (!fs.existsSync(upFolder)) {\r\n      fs.mkdirSync(`${upFolder} `);\r\n    }\r\n  } catch (error) {\r\n    let oldFiles = fs.readdirSync(upFolder);\r\n    oldFiles.forEach(function (file) {\r\n      fs.unlink(`${upFolder} /${file}`, (err) => {\r\n        if (err) {\r\n          console.error(err)\r\n          return\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  //export\r\n  for (let i = 0; i < network.length; i++) {\r\n    console.log(network[i])\r\n    switch (network[i]) {\r\n      case \"AppLovin\":\r\n        try {\r\n          const dir = `${upFolder}/${network[i]}`;\r\n          if (!fs.existsSync(dir)) {\r\n            await fs.mkdirSync(dir);\r\n          }\r\n          let result = mainFile\r\n            .replace(\r\n              `background: #171717 url(./splash.png) no-repeat center`,\r\n              `background: #171717`\r\n            )\r\n            .split(`console.log(\"GOTOSTORE\")`).join(`\r\n                        let device = \"Android\";\r\n                        const linkGameIos = \"${linkStoreIOS}\";\r\n                        const linkGameAndroid = \"${linkStoreAndroid}\";\r\n                        function getMobileOperatingSystem() {\r\n                            var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n                        \r\n                            if (/android/i.test(userAgent)) {\r\n                                device = \"Android\";\r\n                            } else if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n                                device = \"iOS\";\r\n                            } else {\r\n                                device = \"Android\";\r\n                            }\r\n                        \r\n                        }\r\n                        getMobileOperatingSystem();\r\n                        \r\n                           switch (device) {\r\n                                case \"Android\":\r\n                                    mraid.open(\"${linkStoreAndroid}\")\r\n                                    break;\r\n                                case \"iOS\":\r\n                                    mraid.open(\"${linkStoreIOS}\")\r\n                                    break;\r\n                                default: \r\n                                    mraid.open(\"${linkStoreAndroid}\")\r\n        \r\n                            }\r\n                       ;`);\r\n          fs.writeFile(\r\n            `${dir}/${date}_PA_${nameGame}_${ideaName}.html`,\r\n            result,\r\n            \"utf8\",\r\n            function (err) {\r\n              if (err) return console.log(err);\r\n            }\r\n          );\r\n        } catch {\r\n          // throw 'Unexpect error'\r\n        }\r\n        break;\r\n      case \"Google\":\r\n        try {\r\n          const dir = `${upFolder}/${network[i]}`;\r\n          if (!fs.existsSync(dir)) {\r\n            await fs.mkdirSync(dir);\r\n          }\r\n          let result = mainFile\r\n            .replace(\r\n              `background: #171717 url(./splash.png) no-repeat center`,\r\n              `background: #171717`\r\n            )\r\n            .replace(\r\n              \"<!-- GOOGLE -->\",\r\n              `<meta name=\"ad.size\" content=\"width=320,height=480\">`\r\n            )\r\n            .replace(`<link rel=\"icon\" href=\"favicon.ico\" />`, \"\")\r\n            .split(`console.log(\"GOTOSTORE\")`).join(`\r\n                        let device = \"Android\";\r\n                        const linkGameIos = \"${linkStoreIOS}\";\r\n                        const linkGameAndroid = \"${linkStoreAndroid}\";\r\n                        function getMobileOperatingSystem() {\r\n                            var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n                        \r\n                            if (/android/i.test(userAgent)) {\r\n                                device = \"Android\";\r\n                            } else if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n                                device = \"iOS\";\r\n                            } else {\r\n                                device = \"Android\";\r\n                            }\r\n                        \r\n                        }\r\n                        getMobileOperatingSystem();\r\n                        \r\n                            window.open(device == \"Android\" ? linkGameAndroid : linkGameIos)\r\n                       ;`);\r\n\r\n          fs.writeFile(\r\n            `${dir}/${date}_PA_${nameGame}_${ideaName}.html`,\r\n            result,\r\n            \"utf8\",\r\n            function (err) {\r\n              if (err) return console.log(err);\r\n            }\r\n          );\r\n        } catch {\r\n          // throw 'Unexpect error'\r\n        }\r\n        break;\r\n\r\n      case \"Unity\":\r\n        try {\r\n          const dir = `${upFolder}/${network[i]}`;\r\n          if (!fs.existsSync(dir)) {\r\n            await fs.mkdirSync(dir);\r\n          }\r\n          let result = mainFile\r\n            .replace(\r\n              `background: #171717 url(./splash.png) no-repeat center`,\r\n              `background: #171717`\r\n            )\r\n            .split(`console.log(\"GOTOSTORE\")`).join(`\r\n                                let device = \"Android\";\r\n                        const linkGameIos = \"${linkStoreIOS}\";\r\n                        const linkGameAndroid = \"${linkStoreAndroid}\";\r\n                        function getMobileOperatingSystem() {\r\n                            var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n                        \r\n                            if (/android/i.test(userAgent)) {\r\n                                device = \"Android\";\r\n                            } else if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n                                device = \"iOS\";\r\n                            } else {\r\n                                device = \"Android\";\r\n                            }\r\n                        \r\n                        }\r\n                        getMobileOperatingSystem();\r\n                        \r\n                           switch (device) {\r\n                                case \"Android\":\r\n                                    mraid.open(\"${linkStoreAndroid}\")\r\n                                    break;\r\n                                case \"iOS\":\r\n                                    mraid.open(\"${linkStoreIOS}\")\r\n                                    break;\r\n                                default: \r\n                                    mraid.open(\"${linkStoreAndroid}\")\r\n        \r\n                            }\r\n                        `);\r\n\r\n          fs.writeFile(\r\n            `${dir}/${date}_PA_${nameGame}_${ideaName}.html`,\r\n            result,\r\n            \"utf8\",\r\n            function (err) {\r\n              if (err) return console.log(err);\r\n            }\r\n          );\r\n        } catch {\r\n          // throw 'Unexpect error'\r\n        }\r\n        break;\r\n\r\n      case \"Mintegral\":\r\n        try {\r\n          const dir = `${upFolder}/${network[i]}`;\r\n          if (!fs.existsSync(dir)) {\r\n            await fs.mkdirSync(dir);\r\n          }\r\n          let result = mainFile\r\n            .replace(\r\n              `background: #171717 url(./splash.png) no-repeat center`,\r\n              `background: #171717`\r\n            )\r\n            .split(`console.log(\"GOTOSTORE\")`)\r\n            .join(\r\n              `\r\n                                            window.install && window.install();\r\n                                            window.gameEnd && window.gameEnd();\r\n        \r\n                                            `\r\n            )\r\n            .replace(\r\n              \"// MINTE\",\r\n              `\r\n                                function gameStart() { };\r\n                                window.gameReady && window.gameReady();\r\n                                function gameClose() { };\r\n                                `\r\n            );\r\n\r\n          fs.writeFile(\r\n            `${dir}/${date}_PA_${nameGame}_${ideaName}.html`,\r\n            result,\r\n            \"utf8\",\r\n            function (err) {\r\n              if (err) return console.log(err);\r\n            }\r\n          );\r\n        } catch {\r\n          // throw 'Unexpect error'\r\n        }\r\n        break;\r\n\r\n      case \"Iron\":\r\n        try {\r\n          const dir = `${upFolder}/${network[i]}`;\r\n          if (!fs.existsSync(dir)) {\r\n            await fs.mkdirSync(dir);\r\n          }\r\n          let result = mainFile\r\n            .replace(\r\n              `background: #171717 url(./splash.png) no-repeat center`,\r\n              `background: #171717`\r\n            )\r\n            .replace(\r\n              `<!-- IRON1 -->`,\r\n              `\r\n                                \r\n                            <script>\r\n                            function getScript(e,i){var n=document.createElement(\"script\");n.type=\"text/javascript\",n.async=!0,i&&(n.onload=i),n.src=e,document.head.appendChild(n)}function parseMessage(e){var i=e.data,n=i.indexOf(DOLLAR_PREFIX+RECEIVE_MSG_PREFIX);if(-1!==n){var t=i.slice(n+2);return getMessageParams(t)}return{}}function getMessageParams(e){var i,n=[],t=e.split(\"/\"),a=t.length;if(-1===e.indexOf(RECEIVE_MSG_PREFIX)){if(a>=2&&a%2===0)for(i=0;a>i;i+=2)n[t[i]]=t.length<i+1?null:decodeURIComponent(t[i+1])}else{var o=e.split(RECEIVE_MSG_PREFIX);void 0!==o[1]&&(n=JSON&&JSON.parse(o[1]))}return n}function getDapi(e){var i=parseMessage(e);if(!i||i.name===GET_DAPI_URL_MSG_NAME){var n=i.data;getScript(n,onDapiReceived)}}function invokeDapiListeners(){for(var e in dapiEventsPool)dapiEventsPool.hasOwnProperty(e)&&dapi.addEventListener(e,dapiEventsPool[e])}function onDapiReceived(){dapi=window.dapi,window.removeEventListener(\"message\",getDapi),invokeDapiListeners()}function init(){window.dapi.isDemoDapi&&(window.parent.postMessage(DOLLAR_PREFIX+SEND_MSG_PREFIX+JSON.stringify({state:\"getDapiUrl\"}),\"*\"),window.addEventListener(\"message\",getDapi,!1))}var DOLLAR_PREFIX=\"$$$\",RECEIVE_MSG_PREFIX=\"DAPI_SERVICE:\",SEND_MSG_PREFIX=\"DAPI_AD:\",GET_DAPI_URL_MSG_NAME=\"connection.getDapiUrl\",dapiEventsPool={},dapi=window.dapi||{isReady:function(){return!1},addEventListener:function(e,i){dapiEventsPool[e]=i},removeEventListener:function(e){delete dapiEventsPool[e]},isDemoDapi:!0};init();\r\n                            </script>`\r\n            )\r\n            .split(`console.log(\"GOTOSTORE\")`)\r\n            .join(\r\n              `\r\n                                let device = \"Android\";\r\n                                const linkGameIos = \"${linkStoreIOS}\";\r\n                                const linkGameAndroid = \"${linkStoreAndroid}\";\r\n                                function getMobileOperatingSystem() {\r\n                                    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n                                \r\n                                    if (/android/i.test(userAgent)) {\r\n                                        device = \"Android\";\r\n                                    } else if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n                                        device = \"iOS\";\r\n                                    } else {\r\n                                        device = \"Android\";\r\n                                    }\r\n                                \r\n                                }\r\n                                getMobileOperatingSystem();\r\n        \r\n                    dapi.openStoreUrl(device == \"Android\" ? linkGameAndroid : linkGameIos);\r\n                `\r\n            )\r\n            .replace(\r\n              \"// IRON2\",\r\n              `\r\n                                \r\n                    window.onload = function(){\r\n                        (dapi.isReady()) ? onReadyCallback() : dapi.addEventListener(\"ready\", onReadyCallback);\t\r\n                        //here you can put other code that not related to dapi logic\r\n                    };\r\n        \r\n                    function onReadyCallback(){\r\n                        //no need to listen to this event anymore\r\n                        dapi.removeEventListener(\"ready\", onReadyCallback);\r\n                        let isAudioEnabled = !!dapi.getAudioVolume();\r\n        \r\n                        if(dapi.isViewable()){\r\n                            adVisibleCallback({isViewable: true});\r\n                        }\r\n        \r\n                        dapi.addEventListener(\"viewableChange\", adVisibleCallback);\r\n                        dapi.addEventListener(\"adResized\", adResizeCallback);\r\n                        dapi.addEventListener(\"audioVolumeChange\",         audioVolumeChangeCallback);\r\n                    }\r\n        \r\n                    function adVisibleCallback(event){\r\n                        console.log(\"isViewable \" + event.isViewable);\r\n                        if (event.isViewable){\r\n                            screenSize = dapi.getScreenSize();\r\n                            //START or RESUME the ad\r\n                        } else {\r\n                            //PAUSE the ad and MUTE sounds\r\n                        }\r\n                    }\r\n        \r\n                    function adResizeCallback(event){\r\n                        screenSize = event;\r\n                    }\r\n        \r\n                    function audioVolumeChangeCallback(volume){\r\n                        let isAudioEnabled = !!volume;\r\n                        if (isAudioEnabled){\r\n                            //START or turn on the sound\r\n                        } else {\r\n                            //PAUSE the turn off the sound\r\n                        }\r\n                    }\r\n                    `\r\n            );\r\n\r\n          fs.writeFile(\r\n            `${dir}/${date}_PA_${nameGame}_${ideaName}.html`,\r\n            result,\r\n            \"utf8\",\r\n            function (err) {\r\n              if (err) return console.log(err);\r\n            }\r\n          );\r\n        } catch {\r\n          // throw 'Unexpect error'\r\n        }\r\n        break;\r\n      case \"Tiktok\":\r\n        try {\r\n          const dir = `${upFolder}/${network[i]}`;\r\n          if (!fs.existsSync(dir)) {\r\n            await fs.mkdirSync(dir);\r\n          }\r\n          let result = mainFile\r\n            .replace(\r\n              `background: #171717 url(./splash.png) no-repeat center`,\r\n              `background: #171717`\r\n            )\r\n            .replace(\r\n              `<!-- TIKTOK -->`,\r\n              `<script src=\"https://sf16-muse-va.ibytedtos.com/obj/union-fe-nc-i18n/playable/sdk/playable-sdk.js\"></script>`\r\n            )\r\n            .split(`console.log(\"GOTOSTORE\")`)\r\n            .join(`window.playableSDK.openAppStore();`);\r\n\r\n          fs.writeFile(\r\n            `${dir}/${date}_PA_${nameGame}_${ideaName}.html`,\r\n            result,\r\n            \"utf8\",\r\n            function (err) {\r\n              if (err) return console.log(err);\r\n            }\r\n          );\r\n        } catch {\r\n          // throw 'Unexpect error'\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n","D:\\Tool\\hyper-ads-export\\src\\services\\firebaseConfig.js",[],["134","135"],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\components\\GameItem\\index.jsx",["136"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Text,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  ModalFooter,\r\n  FormErrorMessage,\r\n  useToast,\r\n  AlertDialog,\r\n  AlertDialogOverlay,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  Select,\r\n} from '@chakra-ui/react';\r\nimport { ArrowDown3, Trash } from 'iconsax-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  DeleteGameAction,\r\n  SelectGameAction,\r\n  UpdateGameAction,\r\n} from '../../action';\r\n\r\nconst GameItem = (props) => {\r\n  const {\r\n    gameDetail,\r\n    UpdateGameDispatch,\r\n    DeleteGameDispatch,\r\n    SelectGameDispatch,\r\n  } = props;\r\n  const { id } = gameDetail;\r\n  const [gameDetailState, setGameDetailState] = React.useState(gameDetail);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [isOpenAlert, setIsOpenAlert] = React.useState(false);\r\n  const onCloseAlert = () => setIsOpenAlert(false);\r\n  const cancelAlertRef = React.useRef();\r\n\r\n  const toast = useToast();\r\n  const nameRef = React.useRef();\r\n  const finalRef = React.useRef();\r\n\r\n  const handleUpdate = async (values, { setSubmitting, resetForm }) => {\r\n    const { name, linkStoreIOS, linkStoreAndroid, engine } = values;\r\n    const payload = {\r\n      id,\r\n      name,\r\n      linkStoreIOS,\r\n      linkStoreAndroid,\r\n      engine,\r\n    };\r\n    UpdateGameDispatch(payload);\r\n\r\n    setSubmitting(false);\r\n    toast({\r\n      position: 'top',\r\n      title: 'Edit game successfully!',\r\n      status: 'success',\r\n      duration: 2000,\r\n      isClosable: true,\r\n    });\r\n    let timeOut = setTimeout(() => {\r\n      onClose();\r\n      clearTimeout(timeOut);\r\n    }, 2000);\r\n    setGameDetailState(payload);\r\n  };\r\n  const handleDelete = async () => {\r\n    DeleteGameDispatch({ id });\r\n    toast({\r\n      position: 'top',\r\n      title: 'Delete game successfully!',\r\n      status: 'success',\r\n      duration: 2000,\r\n      isClosable: true,\r\n    });\r\n    onCloseAlert();\r\n    let timeOut = setTimeout(() => {\r\n      onClose();\r\n      clearTimeout(timeOut);\r\n    }, 1000);\r\n  };\r\n  const handleSelectGame = () => {\r\n    SelectGameDispatch(gameDetail);\r\n  };\r\n  return (\r\n    <Box my=\"3\" ml=\"3\">\r\n      <Formik\r\n        initialValues={{\r\n          name: gameDetailState.name,\r\n          linkStoreIOS: gameDetailState.linkStoreIOS,\r\n          linkStoreAndroid: gameDetailState.linkStoreAndroid,\r\n          engine: gameDetailState.engine,\r\n        }}\r\n        validationSchema={Yup.object({\r\n          name: Yup.string().required('Required'),\r\n          linkIOS: Yup.string(),\r\n          linkAndroid: Yup.string(),\r\n        })}\r\n        onSubmit={handleUpdate}\r\n      >\r\n        {(formik) => (\r\n          <Modal\r\n            initialFocusRef={nameRef}\r\n            finalFocusRef={finalRef}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n          >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <ModalHeader>Edit info for your game</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody pb={6}>\r\n                  {' '}\r\n                  <FormControl\r\n                    isRequired\r\n                    isInvalid={formik.touched.name && formik.errors.name}\r\n                  >\r\n                    <FormLabel mt={4}>Name game</FormLabel>\r\n                    <Input\r\n                      ref={nameRef}\r\n                      type=\"text\"\r\n                      placeholder={`Ex: ${gameDetailState.name}`}\r\n                      {...formik.getFieldProps('name')}\r\n                    />\r\n                    <FormErrorMessage>{formik.errors.name}</FormErrorMessage>\r\n                  </FormControl>\r\n                  <FormControl\r\n                    isInvalid={\r\n                      formik.touched.linkStoreIOS && formik.errors.linkStoreIOS\r\n                    }\r\n                  >\r\n                    <FormLabel mt={4}>Link store IOS</FormLabel>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Ex: https://apps.apple.com/us/app/sky-raptor/id1518974662\"\r\n                      {...formik.getFieldProps('linkStoreIOS')}\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {formik.errors.linkStoreIOS}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                  <FormControl\r\n                    isInvalid={\r\n                      formik.touched.linkStoreAndroid &&\r\n                      formik.errors.linkStoreAndroid\r\n                    }\r\n                  >\r\n                    <FormLabel mt={4}>Link store Android</FormLabel>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Ex: https://play.google.com/store/apps/details?id=com.skyraptor.spaceshooter\"\r\n                      {...formik.getFieldProps('linkStoreAndroid')}\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {formik.errors.linkStoreAndroid}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                  <FormControl>\r\n                    <FormLabel mt={4}>Engine</FormLabel>\r\n                    <Select\r\n                      defaultValue=\"phaser\"\r\n                      {...formik.getFieldProps('engine')}\r\n                    >\r\n                      <option value=\"phaser\">Phaser</option>\r\n                      <option value=\"cocos\">Cocos</option>\r\n                    </Select>\r\n                    <FormErrorMessage>\r\n                      {formik.errors.linkStoreAndroid}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button colorScheme=\"teal\" mr={3} type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                  <Button\r\n                    colorScheme=\"red\"\r\n                    onClick={() => setIsOpenAlert(true)}\r\n                    rightIcon={<Trash color=\"currentColor\" size=\"20\" />}\r\n                  >\r\n                    Delete Game\r\n                  </Button>\r\n                </ModalFooter>\r\n              </form>\r\n            </ModalContent>\r\n          </Modal>\r\n        )}\r\n      </Formik>\r\n      <Box display=\"flex\" flexWrap=\"nowrap\" onClick={handleSelectGame}>\r\n        <Link to={`/editgame/` + id}>\r\n          <Button borderRightRadius=\"0\" colorScheme=\"teal\">\r\n            <Text>{gameDetailState.name}</Text>\r\n          </Button>\r\n        </Link>\r\n        <Button px=\"0\" borderLeftRadius=\"0\" onClick={onOpen} colorScheme=\"teal\">\r\n          <ArrowDown3 m=\"0\" bg=\"tomato\" color=\"currentColor\" />\r\n        </Button>\r\n      </Box>\r\n\r\n      <AlertDialog\r\n        isOpen={isOpenAlert}\r\n        leastDestructiveRef={cancelAlertRef}\r\n        onClose={onCloseAlert}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete this game\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelAlertRef} onClick={onCloseAlert}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={handleDelete}\r\n                ml={3}\r\n                rightIcon={<Trash color=\"currentColor\" size=\"20\" />}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nGameItem.propTypes = {};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    UpdateGameDispatch: (payload) => {\r\n      dispatch(UpdateGameAction(payload));\r\n    },\r\n    DeleteGameDispatch: (payload) => {\r\n      dispatch(DeleteGameAction(payload));\r\n    },\r\n    SelectGameDispatch: (payload) => {\r\n      dispatch(SelectGameAction(payload));\r\n    },\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(GameItem);\r\n","D:\\Tool\\hyper-ads-export\\src\\container\\Export\\index.jsx",["137"],"import React from 'react';\r\nimport SaveTo from '../../components/SaveTo';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { CombineAndExport } from './../../function/combineSingle';\r\n\r\nconst TempFolder = process.env.REACT_APP_FOLDER_TEMPORAL;\r\nconst fs = window.require('fs');\r\n\r\nconst ExportContaier = (props) => {\r\n  const { listGame } = props;\r\n  const { idgame, ididea, exportbase } = useParams();\r\n  const toast = useToast();\r\n\r\n  const [listGameState, setListGameState] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    setListGameState((pre) => [...listGame]);\r\n  }, [listGame]);\r\n\r\n  const handleExportAds = (ideaName, directorySave) => {\r\n    let payload;\r\n    const linkBaseCode = listGameState\r\n      .filter((game) => game.id === idgame)[0]\r\n      .idea.filter((item) => item.id === ididea)[0].linkBaseCode;\r\n    const fileNames = fs.readdirSync(linkBaseCode);\r\n    const listFileTemp = fs.readdirSync(TempFolder);\r\n\r\n    if (exportbase == 'true') {\r\n      console.log('exportbase', exportbase);\r\n      const listFileFilter = fileNames.filter(\r\n        (fileName) =>\r\n          !fileName.toLowerCase().includes('git') &&\r\n          !fileName.toLowerCase().includes('index.html')\r\n      );\r\n      const listFileCombine = [...listFileFilter];\r\n      payload = {\r\n        nameGame: listGameState.filter((game) => game.id === idgame)[0].name,\r\n        linkStoreAndroid: listGameState.filter((game) => game.id === idgame)[0]\r\n          .linkStoreAndroid,\r\n        linkStoreIOS: listGameState.filter((game) => game.id === idgame)[0]\r\n          .linkStoreIOS,\r\n        linkBaseCode,\r\n        listFileCombine,\r\n        listFileNew: [],\r\n        ideaName,\r\n        directorySave,\r\n      };\r\n    } else {\r\n      const listFileFilter = fileNames.filter(\r\n        (fileName) =>\r\n          !fileName.toLowerCase().includes('git') &&\r\n          !fileName.toLowerCase().includes('index.html')\r\n      );\r\n      const listFileCombine = [...listFileFilter];\r\n      const listFileNew = [...listFileTemp];\r\n      payload = {\r\n        nameGame: listGameState.filter((game) => game.id === idgame)[0].name,\r\n        linkStoreAndroid: listGameState.filter((game) => game.id === idgame)[0]\r\n          .linkStoreAndroid,\r\n        linkStoreIOS: listGameState.filter((game) => game.id === idgame)[0]\r\n          .linkStoreIOS,\r\n        linkBaseCode,\r\n        listFileCombine,\r\n        listFileNew,\r\n        ideaName,\r\n        directorySave,\r\n      };\r\n    }\r\n    const result = CombineAndExport(payload);\r\n    result\r\n      ? toast({\r\n          position: 'top',\r\n          title: 'Export game successfully!',\r\n          status: 'success',\r\n          duration: 2000,\r\n          isClosable: true,\r\n        })\r\n      : toast({\r\n          position: 'top',\r\n          title: `Error when export! ${result}`,\r\n          status: 'error',\r\n          duration: 2000,\r\n          isClosable: true,\r\n        });\r\n  };\r\n  return (\r\n    <div>\r\n      <SaveTo handleExportAds={handleExportAds} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listGame: state.listGameStore,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(ExportContaier);\r\n",["138","139"],"D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\App.js",[],"D:\\Tool\\hyper-ads-export\\src\\Router\\PrivateRouter\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\container\\ChangeAssets\\index.jsx",["140","141"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Image,\r\n  Button,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Box,\r\n  Flex,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport reactImageSize from 'react-image-size';\r\nimport { ExportSquare, AudioSquare, Map1 } from 'iconsax-react';\r\nimport DragDrop from '../../components/DragDrop';\r\nimport {\r\n  readInFile,\r\n  writeInFile,\r\n  convertFileToArray,\r\n  convertAssetToBase64,\r\n  convertArrayToFile,\r\n  removeAllFile,\r\n} from './../../Utils';\r\nimport { TYPE_IMG } from '../../constant';\r\nimport useChangeMap from '../../hook/useChangeMap';\r\n\r\nconst fs = window.require('fs');\r\nconst TempFolder = process.env.REACT_APP_FOLDER_TEMPORAL;\r\n\r\nconst ChangeAssetsContainer = (props) => {\r\n  const { selectedGame } = props;\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const params = useParams();\r\n  const idgame = params.idgame;\r\n  const ididea = params.ididea;\r\n  const isChangeMap = useChangeMap();\r\n  const locationSaveFile = `${TempFolder}/Image-${ididea}.js`;\r\n\r\n  console.log('ChangeAssetsContainer loaded');\r\n\r\n  const [variableListState, setVariableListState] = useState([]);\r\n  const [triggerRerender, setTriggerRerender] = useState(false);\r\n\r\n  const handleFile = async (data) => {\r\n    //convert image drag to base64\r\n    var imageAsBase64 = convertAssetToBase64(data.file.path);\r\n    const { width, height } = await reactImageSize(data.file.path);\r\n    setVariableListState((pre) => {\r\n      pre[data.index].url = `data:image/png;base64,${imageAsBase64}`;\r\n      pre[data.index]['newWidth'] = width;\r\n      pre[data.index]['newHeight'] = height;\r\n      return pre;\r\n    });\r\n    setTriggerRerender(!triggerRerender);\r\n    const result = writeInFile(\r\n      locationSaveFile,\r\n      convertArrayToFile(variableListState)\r\n    );\r\n\r\n    result\r\n      ? toast({\r\n          title: `Save Asset succeslully!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'success',\r\n        })\r\n      : toast({\r\n          title: `Fail to seve Asset!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'error',\r\n        });\r\n  };\r\n\r\n  //save file  before change route\r\n  const handleChangePage = (route) => {\r\n    const result = writeInFile(\r\n      locationSaveFile,\r\n      convertArrayToFile(variableListState)\r\n    );\r\n    result\r\n      ? toast({\r\n          title: `Save Asset succeslully!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'success',\r\n        })\r\n      : toast({\r\n          title: `Fail to seve Asset!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'error',\r\n        });\r\n    navigate(`${route}`);\r\n  };\r\n\r\n  //transform data to render\r\n  useEffect(() => {\r\n    //check recent file edit\r\n    const recentFileEdit = fs\r\n      .readdirSync(TempFolder)\r\n      .filter(\r\n        (item) =>\r\n          item.toLowerCase().includes(`${ididea}`) &&\r\n          item.toLowerCase().includes(`image`)\r\n      );\r\n\r\n    let variableList;\r\n    // nếu có file cũ thì load file cũ\r\n    if (recentFileEdit.length > 0) {\r\n      const content = readInFile(`${TempFolder}/${recentFileEdit[0]}`);\r\n      variableList = convertFileToArray(content);\r\n    } else {\r\n      // không thì xóa hết\r\n      removeAllFile(TempFolder);\r\n      //load từ base\r\n      const ideaSelect =\r\n        selectedGame.idea[\r\n          selectedGame?.idea?.findIndex((idea) => idea.id === ididea)\r\n        ];\r\n\r\n      const ImageFile = fs\r\n        .readdirSync(`${ideaSelect.linkBaseCode}`)\r\n        .filter((item) => item.toLowerCase().includes('image'));\r\n\r\n      const contentImageFile = fs.readFileSync(\r\n        `${ideaSelect.linkBaseCode}/${ImageFile[0]}`,\r\n        'utf8'\r\n      );\r\n      variableList = convertFileToArray(contentImageFile);\r\n    }\r\n    //optimize performance\r\n    let dataTranformStateTemp = [];\r\n    variableList.map(async (item, index) => {\r\n      const { width, height } = await reactImageSize(item[1]);\r\n      dataTranformStateTemp.push({\r\n        name: item[0],\r\n        url: item[1],\r\n        width,\r\n        height,\r\n      });\r\n      if (index == variableList.length - 1) {\r\n        setVariableListState((pre) => [...dataTranformStateTemp]);\r\n        dataTranformStateTemp = [];\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box mb=\"5\">\r\n        <Box height=\"75vh\" overflowY=\"scroll\">\r\n          <Table w=\"100%\" my=\"5\" variant=\"striped\" colorScheme=\"gray\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th textAlign=\"center\">Index</Th>\r\n                <Th>Name Asset</Th>\r\n                <Th>Current Asset</Th>\r\n                <Th>Current Size</Th>\r\n                <Th>New Asset</Th>\r\n                <Th>New Size</Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {variableListState.map((item, index) => {\r\n                return (\r\n                  <Tr key={index}>\r\n                    <Td textAlign=\"center\">{index + 1}</Td>\r\n                    <Td>{item.name.slice(3, -3)}</Td>\r\n                    <Td>\r\n                      <Image\r\n                        loading=\"lazy\"\r\n                        boxSize=\"150px\"\r\n                        objectFit=\"contain\"\r\n                        src={item.url}\r\n                        alt=\"Error Image\"\r\n                        _hover={{\r\n                          transform: 'scale(1.5)',\r\n                          transition: 'all 0.3s',\r\n                        }}\r\n                      />\r\n                    </Td>\r\n                    <Td>\r\n                      {item.height}x{item.width}\r\n                    </Td>\r\n                    <Td>\r\n                      <DragDrop\r\n                        key={index}\r\n                        text=\"asset\"\r\n                        handleFile={handleFile}\r\n                        indexFile={index}\r\n                        type={TYPE_IMG}\r\n                      />\r\n                    </Td>\r\n                    <Td>\r\n                      {item.newHeight\r\n                        ? item.newHeight + 'x' + item.newWidth\r\n                        : 'Null'}\r\n                    </Td>\r\n                  </Tr>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Box>\r\n        <Flex justifyContent=\"flex-end\" mt=\"40px\">\r\n          <Box>\r\n            <Button\r\n              colorScheme=\"green\"\r\n              rightIcon={<AudioSquare size=\"20\" color=\"currentColor\" />}\r\n              onClick={() =>\r\n                handleChangePage(`/editgame/${idgame}/${ididea}/changesounds`)\r\n              }\r\n            >\r\n              Change Sounds\r\n            </Button>{' '}\r\n            <Button\r\n              colorScheme=\"green\"\r\n              rightIcon={<Map1 size=\"20\" color=\"currentColor\" />}\r\n              onClick={() =>\r\n                handleChangePage(`/editgame/${idgame}/${ididea}/changemap`)\r\n              }\r\n              isDisabled={isChangeMap}\r\n            >\r\n              Change Map\r\n            </Button>{' '}\r\n            <Button\r\n              ml=\"5\"\r\n              colorScheme=\"green\"\r\n              rightIcon={<ExportSquare size=\"20\" color=\"currentColor\" />}\r\n              onClick={() =>\r\n                handleChangePage(`/export/${idgame}/${ididea}/false`)\r\n              }\r\n            >\r\n              Export Now\r\n            </Button>{' '}\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nChangeAssetsContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedGame: state.gameSelected,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(ChangeAssetsContainer);\r\n","D:\\Tool\\hyper-ads-export\\src\\components\\DragDrop\\index.jsx",["142"],"import React from 'react';\r\nimport { Box } from '@chakra-ui/layout';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Textarea } from '@chakra-ui/react';\r\nimport { readInFile } from '../../Utils';\r\nimport * as Type from './../../constant';\r\nconst TypeAccept = [\r\n  {\r\n    type: Type.TYPE_IMG,\r\n    component: (data) => (\r\n      <img style={{ maxHeight: '100px' }} src={data} alt=\"new assets\" />\r\n    ),\r\n  },\r\n  {\r\n    type: Type.TYPE_AUDIO,\r\n    component: (data) => (\r\n      <audio controls>\r\n        <source src={data} />\r\n      </audio>\r\n    ),\r\n  },\r\n  {\r\n    type: Type.TYPE_JSON,\r\n    component: (data) => {\r\n      const result = readInFile(data);\r\n      return <Textarea type=\"text\" value={result} alt=\"new map\" rows=\"18\" />;\r\n    },\r\n  },\r\n];\r\n\r\nconst DragDrop = (props) => {\r\n  const { text, handleFile, type, indexFile } = props;\r\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n    accept: type,\r\n    maxFiles: 1,\r\n    onDrop: (acceptedFiles) => {\r\n      acceptedFiles.map((file) =>\r\n        handleFile({\r\n          file: file,\r\n          index: indexFile,\r\n        })\r\n      );\r\n    },\r\n  });\r\n\r\n  const files = acceptedFiles.map((file) => {\r\n    return (\r\n      <li key={file.path}>\r\n        {file.path} - {file.size} bytes\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      w=\"100%\"\r\n      border=\"2px dashed\"\r\n      p=\"10px\"\r\n      {...getRootProps({\r\n        className: 'dropzone',\r\n      })}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <>\r\n        {files.length ? (\r\n          <aside>\r\n            <h4 className=\"path-select\">\r\n              {TypeAccept.map((item) => {\r\n                if (item.type === type) {\r\n                  return item.component(files[0].key);\r\n                }\r\n              })}\r\n            </h4>\r\n          </aside>\r\n        ) : (\r\n          <p>\r\n            Drag 'n' drop new file {text} here <br />\r\n          </p>\r\n        )}\r\n      </>\r\n    </Box>\r\n  );\r\n};\r\nexport default DragDrop;\r\n","D:\\Tool\\hyper-ads-export\\src\\Theme\\index.js",[],["143","144"],"D:\\Tool\\hyper-ads-export\\src\\Utils\\index.js",["145"],"const fs = window.require('fs');\r\nexport const readInFolder = (linkFoler) => {\r\n  try {\r\n    return fs.readdirSync(linkFoler);\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n\r\n}\r\nexport const writeInFile = (linkfile, content) => {\r\n  try {\r\n    fs.writeFileSync(\r\n      `${linkfile}`, content\r\n    );\r\n    return true\r\n  } catch (error) {\r\n    return error\r\n  }\r\n}\r\nexport const readInFile = (linkfile) => {\r\n  try {\r\n    return fs.readFileSync(linkfile, { encoding: 'utf8' });\r\n  } catch (error) {\r\n    return error\r\n  }\r\n}\r\nexport const readFileDetail = (linkfile) => {\r\n  try {\r\n    return fs.readFileSync(`${linkfile}/index.html`, \"utf8\");\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\nexport const removeAllFile = (location) => {\r\n  fs.readdirSync(location)\r\n    .forEach((file) => {\r\n      fs.unlink(`${location}/${file}`, (err) => {\r\n        if (err) {\r\n          console.error(err);\r\n          return;\r\n        }\r\n      });\r\n    });\r\n}\r\nexport const convertFileToArray = (content) => {\r\n  return content.split('var ')\r\n    .map((item) => {\r\n      return item\r\n        .split(' = ')\r\n        .map((item, index) =>\r\n          index == 1\r\n            ? item.trim().replace(/[\"]/g, '').slice(0, -1)\r\n            : item.trim().replace(/[\"]/g, '')\r\n        );\r\n    })\r\n    .slice(1);\r\n}\r\nexport const deepClone = (data) => {\r\n  const newData = JSON.stringify(data);\r\n  return JSON.parse(newData);\r\n}\r\nexport const convertArrayToFile = (array) => {\r\n  return array.map((item) => `var ${item.name} = \"${item.url}\";`).join('\\n');\r\n}\r\nexport const convertAssetToBase64 = (assetPath) => {\r\n  try {\r\n    return fs.readFileSync(assetPath, 'base64');\r\n  } catch (error) {\r\n    return console.error(error);\r\n  }\r\n}","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeAssets\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeMap\\index.jsx",[],["146","147"],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\SelectIdea\\index.jsx",["148","149"],"D:\\Tool\\hyper-ads-export\\src\\pages\\Home\\index.jsx",["150","151"],"D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\styles.js",[],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeSounds\\index.jsx",["152"],"D:\\Tool\\hyper-ads-export\\src\\hook\\useChangeMap.jsx",["153","154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"155","replacedBy":"159"},{"ruleId":"157","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":134,"column":36,"nodeType":"163","messageId":"164","endLine":134,"endColumn":38},{"ruleId":"165","severity":1,"message":"166","line":139,"column":17,"nodeType":"167","messageId":"168","endLine":139,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":144,"column":6,"nodeType":"171","endLine":144,"endColumn":8,"suggestions":"172"},{"ruleId":"161","severity":1,"message":"162","line":15,"column":26,"nodeType":"163","messageId":"164","endLine":15,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":41,"column":30,"nodeType":"163","messageId":"164","endLine":41,"endColumn":32},{"ruleId":"161","severity":1,"message":"162","line":76,"column":30,"nodeType":"163","messageId":"164","endLine":76,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":78,"column":16,"nodeType":"167","messageId":"168","endLine":78,"endColumn":18},{"ruleId":"155","replacedBy":"173"},{"ruleId":"157","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":30,"column":20,"nodeType":"167","messageId":"168","endLine":30,"endColumn":22},{"ruleId":"155","replacedBy":"179"},{"ruleId":"157","replacedBy":"180"},{"ruleId":"165","severity":1,"message":"166","line":147,"column":17,"nodeType":"167","messageId":"168","endLine":147,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":152,"column":6,"nodeType":"171","endLine":152,"endColumn":8,"suggestions":"181"},{"ruleId":"161","severity":1,"message":"182","line":68,"column":38,"nodeType":"163","messageId":"183","endLine":68,"endColumn":40},{"ruleId":"155","replacedBy":"184"},{"ruleId":"157","replacedBy":"185"},{"ruleId":"165","severity":1,"message":"166","line":51,"column":17,"nodeType":"167","messageId":"168","endLine":51,"endColumn":19},{"ruleId":"155","replacedBy":"186"},{"ruleId":"157","replacedBy":"187"},{"ruleId":"175","severity":1,"message":"188","line":1,"column":28,"nodeType":"177","messageId":"178","endLine":1,"endColumn":34},{"ruleId":"175","severity":1,"message":"176","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":17},{"ruleId":"175","severity":1,"message":"176","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":17},{"ruleId":"169","severity":1,"message":"189","line":102,"column":6,"nodeType":"171","endLine":102,"endColumn":8,"suggestions":"190"},{"ruleId":"175","severity":1,"message":"176","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":17,"column":30,"nodeType":"163","messageId":"164","endLine":17,"endColumn":32},{"ruleId":"169","severity":1,"message":"170","line":22,"column":6,"nodeType":"171","endLine":22,"endColumn":8,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],["192"],["193"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ididea' and 'selectedGame.idea'. Either include them or remove the dependency array.","ArrayExpression",["194"],["192"],["193"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar",["192"],["193"],["195"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["192"],["193"],["192"],["193"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'initGameDispatch'. Either include it or remove the dependency array.",["196"],["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"198","fix":"200"},{"desc":"201","fix":"202"},{"desc":"198","fix":"203"},"Update the dependencies array to be: [ididea, selectedGame.idea]",{"range":"204","text":"205"},{"range":"206","text":"205"},"Update the dependencies array to be: [initGameDispatch]",{"range":"207","text":"208"},{"range":"209","text":"205"},[4175,4177],"[ididea, selectedGame.idea]",[4395,4397],[2897,2899],"[initGameDispatch]",[768,770]]