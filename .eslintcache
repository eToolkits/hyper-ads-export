[{"D:\\Tool\\hyper-ads-export\\src\\App.js":"1","D:\\Tool\\hyper-ads-export\\src\\Router\\PrivateRouter\\index.jsx":"2","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeAssets\\index.jsx":"3","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\SelectIdea\\index.jsx":"4","D:\\Tool\\hyper-ads-export\\src\\container\\Export\\index.jsx":"5","D:\\Tool\\hyper-ads-export\\src\\function\\combineSingle.js":"6","D:\\Tool\\hyper-ads-export\\src\\components\\Loading\\index.jsx":"7","D:\\Tool\\hyper-ads-export\\src\\action\\index.js":"8","D:\\Tool\\hyper-ads-export\\src\\container\\ChangeSounds\\index.jsx":"9","D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\styles.js":"10","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\index.jsx":"11","D:\\Tool\\hyper-ads-export\\src\\index.js":"12","D:\\Tool\\hyper-ads-export\\src\\reducer\\gameSelect.js":"13","D:\\Tool\\hyper-ads-export\\src\\Router\\index.jsx":"14","D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\index.jsx":"15","D:\\Tool\\hyper-ads-export\\src\\services\\Game.service.js":"16","D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\styles.js":"17","D:\\Tool\\hyper-ads-export\\src\\constant\\index.js":"18","D:\\Tool\\hyper-ads-export\\src\\Utils\\index.js":"19","D:\\Tool\\hyper-ads-export\\src\\services\\firebaseConfig.js":"20","D:\\Tool\\hyper-ads-export\\src\\pages\\Home\\index.jsx":"21","D:\\Tool\\hyper-ads-export\\src\\components\\GameItem\\index.jsx":"22","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeSounds\\index.jsx":"23","D:\\Tool\\hyper-ads-export\\src\\pages\\Export\\index.jsx":"24","D:\\Tool\\hyper-ads-export\\src\\container\\ChangeAssets\\index.jsx":"25"},{"size":721,"mtime":1640247460213,"results":"26","hashOfConfig":"27"},{"size":2072,"mtime":1640168673554,"results":"28","hashOfConfig":"27"},{"size":320,"mtime":1639713502748,"results":"29","hashOfConfig":"27"},{"size":6019,"mtime":1639713502749,"results":"30","hashOfConfig":"27"},{"size":3228,"mtime":1640243507725,"results":"31","hashOfConfig":"27"},{"size":32699,"mtime":1640245572601,"results":"32","hashOfConfig":"27"},{"size":617,"mtime":1640166863396,"results":"33","hashOfConfig":"27"},{"size":945,"mtime":1639713502737,"results":"34","hashOfConfig":"27"},{"size":6636,"mtime":1640243500302,"results":"35","hashOfConfig":"27"},{"size":525,"mtime":1640137009196,"results":"36","hashOfConfig":"27"},{"size":1369,"mtime":1640246116630,"results":"37","hashOfConfig":"27"},{"size":847,"mtime":1639713502746,"results":"38","hashOfConfig":"27"},{"size":1939,"mtime":1639713502753,"results":"39","hashOfConfig":"27"},{"size":310,"mtime":1639713502736,"results":"40","hashOfConfig":"27"},{"size":4018,"mtime":1639713502740,"results":"41","hashOfConfig":"27"},{"size":1733,"mtime":1639713502755,"results":"42","hashOfConfig":"27"},{"size":1815,"mtime":1639713502741,"results":"43","hashOfConfig":"27"},{"size":332,"mtime":1639713502742,"results":"44","hashOfConfig":"27"},{"size":1616,"mtime":1640169185069,"results":"45","hashOfConfig":"27"},{"size":921,"mtime":1639713502755,"results":"46","hashOfConfig":"27"},{"size":7467,"mtime":1640243625517,"results":"47","hashOfConfig":"27"},{"size":7779,"mtime":1639713502738,"results":"48","hashOfConfig":"27"},{"size":320,"mtime":1639713502748,"results":"49","hashOfConfig":"27"},{"size":212,"mtime":1640141451550,"results":"50","hashOfConfig":"27"},{"size":7562,"mtime":1640243487481,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1icqvp2",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Tool\\hyper-ads-export\\src\\App.js",[],"D:\\Tool\\hyper-ads-export\\src\\Router\\PrivateRouter\\index.jsx",[],["115","116"],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeAssets\\index.jsx",["117"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ChangeAssetsContainer from \"../../../container/ChangeAssets\";\r\n\r\nconst ChangeAssetsPage = (props) => {\r\n  return (\r\n    <>\r\n      <ChangeAssetsContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nChangeAssetsPage.propTypes = {};\r\n\r\nexport default ChangeAssetsPage;\r\n",["118","119"],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\SelectIdea\\index.jsx",["120","121"],"import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  InputLeftElement,\r\n  InputGroup,\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Text,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  ModalFooter,\r\n  FormErrorMessage,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { SearchNormal1, AddSquare } from \"iconsax-react\";\r\nimport IdeaItem from \"../../../components/IdeaItem\";\r\nimport { AddIdeaAction } from \"../../../action\";\r\nimport { useParams } from \"react-router\";\r\nconst SelectIdeaPage = (props) => {\r\n  const { gameSelected, addIdeaDispatch } = props;\r\n  const params = useParams();\r\n  const idgame = params.idgame;\r\n\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [listIdeaState, setListIdeaState] = React.useState([]);\r\n  const [searchIdeaState, setSearchIdeaState] = React.useState();\r\n\r\n  const nameRef = React.useRef();\r\n  const finalRef = React.useRef();\r\n\r\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\r\n    const { name, linkBaseCode } = values;\r\n    const payload = {\r\n      id: uuid(),\r\n      name: name,\r\n      linkBaseCode: linkBaseCode,\r\n      parentGameId: idgame,\r\n    };\r\n    addIdeaDispatch(payload);\r\n    setSubmitting(false);\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Add game successfully!\",\r\n      status: \"success\",\r\n      duration: 2000,\r\n      isClosable: true,\r\n    });\r\n    let timeOut = setTimeout(() => {\r\n      resetForm();\r\n      onClose();\r\n      clearTimeout(timeOut);\r\n    }, 2000);\r\n  };\r\n  const handleSearch = (event) => {\r\n    const { value } = event.target;\r\n    let searchResult = searchIdeaState.filter((item) =>\r\n      item.name.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setListIdeaState(searchResult);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setListIdeaState(gameSelected.idea || []);\r\n    setSearchIdeaState(gameSelected.idea || []);\r\n  }, [gameSelected]);\r\n\r\n  return (\r\n    <>\r\n      <Text align=\"center\" fontSize=\"30\" fontWeight=\"bold\">\r\n        CHOOSE IDEA\r\n      </Text>\r\n      <Box my=\"5\">\r\n        <InputGroup mx=\"3\">\r\n          <InputLeftElement\r\n            pointerEvents=\"none\"\r\n            children={<SearchNormal1 color=\"currentColor\" />}\r\n          />\r\n          <Input\r\n            minW=\"200px\"\r\n            width=\"50%\"\r\n            type=\"text\"\r\n            placeholder=\"search ...\"\r\n            onChange={handleSearch}\r\n          />\r\n        </InputGroup>\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"flex-start\" flexWrap=\"wrap\">\r\n        <Button\r\n          m=\"3\"\r\n          onClick={onOpen}\r\n          leftIcon={<AddSquare color=\"currentColor\" />}\r\n          colorScheme=\"blue\"\r\n        >\r\n          <Text mr=\"0\">Add Idea</Text>\r\n        </Button>\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            linkBaseCode: \"\",\r\n          }}\r\n          validationSchema={Yup.object({\r\n            name: Yup.string().required(\"Required\"),\r\n            linkBaseCode: Yup.string().required(\"Required\"),\r\n          })}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {(formik) => (\r\n            <Modal\r\n              initialFocusRef={nameRef}\r\n              finalFocusRef={finalRef}\r\n              isOpen={isOpen}\r\n              onClose={onClose}\r\n            >\r\n              <ModalOverlay />\r\n              <ModalContent>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <ModalHeader>Add Idea</ModalHeader>\r\n                  <ModalCloseButton />\r\n                  <ModalBody pb={6}>\r\n                    {\" \"}\r\n                    <FormControl\r\n                      isRequired\r\n                      isInvalid={formik.touched.name && formik.errors.name}\r\n                    >\r\n                      <FormLabel mt={4}>Title idea</FormLabel>\r\n                      <Input\r\n                        ref={nameRef}\r\n                        type=\"text\"\r\n                        placeholder=\"Ex: Sky Raptor\"\r\n                        {...formik.getFieldProps(\"name\")}\r\n                      />\r\n                      <FormErrorMessage>{formik.errors.name}</FormErrorMessage>\r\n                    </FormControl>\r\n                    <FormControl\r\n                      isRequired\r\n                      isInvalid={\r\n                        formik.touched.linkBaseCode &&\r\n                        formik.errors.linkBaseCode\r\n                      }\r\n                    >\r\n                      <FormLabel mt={4}>Link base code</FormLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"Ex: D:/order\"\r\n                        {...formik.getFieldProps(\"linkBaseCode\")}\r\n                      />\r\n                      <FormErrorMessage>\r\n                        {formik.errors.linkBaseCode}\r\n                      </FormErrorMessage>\r\n                    </FormControl>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button colorScheme=\"teal\" mr={3} type=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                    <Button onClick={onClose}>Cancel</Button>\r\n                  </ModalFooter>\r\n                </form>\r\n              </ModalContent>\r\n            </Modal>\r\n          )}\r\n        </Formik>\r\n        {listIdeaState?.map((idea) => (\r\n          <IdeaItem key={idea.id} idGame={idgame} ideaDetail={idea} />\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nSelectIdeaPage.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    gameSelected: state.gameSelected,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addIdeaDispatch: (payload) => dispatch(AddIdeaAction(payload)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectIdeaPage);\r\n",["122","123"],"D:\\Tool\\hyper-ads-export\\src\\container\\Export\\index.jsx",[],["124","125"],"D:\\Tool\\hyper-ads-export\\src\\function\\combineSingle.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"D:\\Tool\\hyper-ads-export\\src\\components\\Loading\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\action\\index.js",[],"D:\\Tool\\hyper-ads-export\\src\\container\\ChangeSounds\\index.jsx",["159","160","161"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Box,\r\n  Flex,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport { ExportSquare, AudioSquare } from 'iconsax-react';\r\nimport DragDrop from '../../components/DragDrop';\r\nimport Loading from '../../components/Loading';\r\nimport {\r\n  readInFile,\r\n  writeInFile,\r\n  convertFileToArray,\r\n  convertAssetToBase64,\r\n  convertArrayToFile,\r\n} from './../../Utils';\r\nconst fs = window.require('fs');\r\n\r\nconst TempFolder = process.env.REACT_APP_FOLDER_TEMPORAL;\r\n\r\nconst ChangeSoundsContainer = (props) => {\r\n  const { selectedGame } = props;\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const params = useParams();\r\n  const idgame = params.idgame;\r\n  const ididea = params.ididea;\r\n  const locationSaveFile = `${TempFolder}/Sound-${ididea}.js`;\r\n  console.log('ChangeSoundsContainer loaded');\r\n\r\n  const [variableListState, setVariableListState] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const handleFile = (data) => {\r\n    //convert sound drag to base64\r\n    var soundAsBase64 = convertAssetToBase64(data.file.path);\r\n    setVariableListState((pre) => {\r\n      pre[data.index].url = `data:audio/mpeg;base64,${soundAsBase64}`;\r\n      return pre;\r\n    });\r\n    const result = writeInFile(\r\n      locationSaveFile,\r\n      convertArrayToFile(variableListState)\r\n    );\r\n    result\r\n      ? toast({\r\n          title: `Save Asset succeslully!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'success',\r\n        })\r\n      : toast({\r\n          title: `Fail to seve Asset!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'error',\r\n        });\r\n  };\r\n  //save file before change route\r\n  const handleChangePage = (route) => {\r\n    const result = writeInFile(\r\n      locationSaveFile,\r\n      convertArrayToFile(variableListState)\r\n    );\r\n    result\r\n      ? toast({\r\n          title: `Save Asset succeslully!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'success',\r\n        })\r\n      : toast({\r\n          title: `Fail to seve Asset!`,\r\n          position: 'top',\r\n          isClosable: true,\r\n          status: 'error',\r\n        });\r\n    navigate(`${route}`);\r\n  };\r\n\r\n  //check recent file, transform data to render\r\n  useEffect(() => {\r\n    const recentFileEdit = fs\r\n      .readdirSync(TempFolder)\r\n      .filter(\r\n        (item) =>\r\n          item.toLowerCase().includes(`${ididea}`) &&\r\n          item.toLowerCase().includes(`sound`)\r\n      );\r\n    let variableList;\r\n    if (recentFileEdit.length > 0) {\r\n      const content = readInFile(`${TempFolder}/${recentFileEdit[0]}`);\r\n      variableList = convertFileToArray(content);\r\n    } else {\r\n      fs.readdirSync(TempFolder)\r\n        .filter((item) => !item.toLowerCase().includes(`${ididea}`))\r\n        .forEach((file) => {\r\n          fs.unlink(`./src/TempCombine/${file}`, (err) => {\r\n            if (err) {\r\n              console.error(err);\r\n              return;\r\n            }\r\n          });\r\n        });\r\n      const ideaSelect =\r\n        selectedGame.idea[\r\n          selectedGame?.idea?.findIndex((idea) => idea.id === ididea)\r\n        ];\r\n\r\n      const SoundFile = fs\r\n        .readdirSync(`${ideaSelect.linkBaseCode}`)\r\n        .filter((item) => item.toLowerCase().includes('sound'));\r\n\r\n      const contentSoundFile = fs.readFileSync(\r\n        `${ideaSelect.linkBaseCode}/${SoundFile[0]}`,\r\n        'utf8'\r\n      );\r\n      variableList = convertFileToArray(contentSoundFile);\r\n    }\r\n\r\n    //optimize performance\r\n    let dataTranformStateTemp = [];\r\n    variableList.map((item, index) => {\r\n      dataTranformStateTemp.push({\r\n        name: item[0],\r\n        url: item[1],\r\n      });\r\n      if (index == variableList.length - 1) {\r\n        setVariableListState((pre) => [...dataTranformStateTemp]);\r\n        const time = setTimeout(() => {\r\n          setIsLoading(false);\r\n          clearTimeout(time);\r\n        }, 2000);\r\n        dataTranformStateTemp = [];\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Box mb=\"5\">\r\n          <Box height=\"75vh\" overflowY=\"scroll\">\r\n            <Table w=\"100%\" my=\"5\" variant=\"striped\" colorScheme=\"gray\">\r\n              <Thead>\r\n                <Tr>\r\n                  <Th textAlign=\"center\">Index</Th>\r\n                  <Th>Name Sound</Th>\r\n                  <Th>Current Sound</Th>\r\n                  <Th>New Sound</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {variableListState.map((item, index) => {\r\n                  return (\r\n                    <Tr key={index}>\r\n                      <Td textAlign=\"center\">{index + 1}</Td>\r\n                      <Td>{item.name.slice(0, -3)}</Td>\r\n                      <Td>\r\n                        <audio controls>\r\n                          <source src={item.url} />\r\n                        </audio>\r\n                      </Td>\r\n                      <Td>\r\n                        <DragDrop\r\n                          text=\"asset\"\r\n                          handleFile={handleFile}\r\n                          indexFile={index}\r\n                          type=\"audio/mp3, audio/mpeg\"\r\n                        />\r\n                      </Td>\r\n                    </Tr>\r\n                  );\r\n                })}\r\n              </Tbody>\r\n            </Table>\r\n          </Box>\r\n          <Flex justifyContent=\"flex-end\" mt=\"40px\">\r\n            <Box>\r\n              <Button\r\n                colorScheme=\"green\"\r\n                rightIcon={<AudioSquare size=\"20\" color=\"currentColor\" />}\r\n                onClick={() =>\r\n                  handleChangePage(`/editgame/${idgame}/${ididea}/changeassets`)\r\n                }\r\n              >\r\n                Change Assets\r\n              </Button>{' '}\r\n              <Button\r\n                ml=\"5\"\r\n                colorScheme=\"green\"\r\n                rightIcon={<ExportSquare size=\"20\" color=\"currentColor\" />}\r\n                onClick={() => handleChangePage(`/export/${idgame}/${ididea}/false`)}\r\n              >\r\n                Export Now\r\n              </Button>{' '}\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nChangeSoundsContainer.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedGame: state.gameSelected,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(ChangeSoundsContainer);\r\n",["162","163"],"D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\styles.js",[],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\index.js",[],"D:\\Tool\\hyper-ads-export\\src\\reducer\\gameSelect.js",[],"D:\\Tool\\hyper-ads-export\\src\\Router\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\services\\Game.service.js",[],"D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\styles.js",[],"D:\\Tool\\hyper-ads-export\\src\\constant\\index.js",[],"D:\\Tool\\hyper-ads-export\\src\\Utils\\index.js",["164"],"const fs = window.require('fs');\r\nexport const writeInFile = async (linkfile, content) => {\r\n  try {\r\n    await fs.writeFileSync(\r\n      `${linkfile}`, content\r\n    );\r\n    return true\r\n  } catch (error) {\r\n    return error\r\n  }\r\n}\r\nexport const readInFile = (linkfile) => {\r\n  try {\r\n    return fs.readFileSync(linkfile, { encoding: 'utf8' });\r\n  } catch (error) {\r\n    return error\r\n  }\r\n}\r\nexport const readFileDetail = (linkfile) => {\r\n  try {\r\n    return fs.readFileSync(`${linkfile}/index.html`, \"utf8\");\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\nexport const removeAllFile = (location) => {\r\n  fs.readdirSync(location)\r\n        .forEach((file) => {\r\n          fs.unlink(`${location}/${file}`, (err) => {\r\n            if (err) {\r\n              console.error(err);\r\n              return;\r\n            }\r\n          });\r\n        });\r\n}\r\nexport const convertFileToArray = (content) => {\r\n  return content.split('var ')\r\n    .map((item) => {\r\n      return item\r\n        .split(' = ')\r\n        .map((item, index) =>\r\n          index == 1\r\n            ? item.trim().replace(/[\"]/g, '').slice(0, -1)\r\n            : item.trim().replace(/[\"]/g, '')\r\n        );\r\n    })\r\n    .slice(1);\r\n}\r\nexport const deepClone = (data) => {\r\n  const newData = JSON.stringify(data);\r\n  return JSON.parse(newData);\r\n}\r\nexport const convertArrayToFile = (array) => {\r\n  return array.map((item) => `var ${item.name} = \"${item.url}\";`).join('\\n');\r\n}\r\nexport const convertAssetToBase64 = (assetPath) => {\r\n  try {\r\n    return fs.readFileSync(assetPath, 'base64');\r\n  } catch (error) {\r\n    return console.error(error);\r\n  }\r\n}","D:\\Tool\\hyper-ads-export\\src\\services\\firebaseConfig.js",[],"D:\\Tool\\hyper-ads-export\\src\\pages\\Home\\index.jsx",["165","166"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  InputLeftElement,\r\n  InputGroup,\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Text,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  ModalFooter,\r\n  FormErrorMessage,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { SearchNormal1, AddSquare } from 'iconsax-react';\r\nimport GameItem from '../../components/GameItem';\r\nimport { connect } from 'react-redux';\r\nimport { AddGameAction, InitGameAction } from '../../action';\r\nimport { db } from './../../services/firebaseConfig';\r\nimport { ref, get } from 'firebase/database';\r\n\r\nconst HomePage = (props) => {\r\n  const { listGame, initGameDispatch, addGameDispatch } = props;\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [listGameState, setListGameState] = React.useState(() => {});\r\n  const [searchGameState, setSearchGameState] = React.useState();\r\n  const nameRef = React.useRef();\r\n  const finalRef = React.useRef();\r\n\r\n  const handleAddGame = (values, { setSubmitting, resetForm }) => {\r\n    const { name, linkIOS, linkAndroid } = values;\r\n    const payload = {\r\n      id: uuid(),\r\n      name: name,\r\n      linkStoreIOS: linkIOS,\r\n      linkStoreAndroid: linkAndroid,\r\n      idea: [],\r\n    };\r\n    addGameDispatch(payload);\r\n    toast({\r\n      position: 'top',\r\n      title: 'Add game successfully!',\r\n      status: 'success',\r\n      duration: 2000,\r\n      isClosable: true,\r\n    });\r\n    let timeOut = setTimeout(() => {\r\n      setSubmitting(false);\r\n      resetForm();\r\n      onClose();\r\n      clearTimeout(timeOut);\r\n    }, 2000);\r\n  };\r\n  const handleSearch = (event) => {\r\n    const { value } = event.target;\r\n    let searchResult = searchGameState.filter((item) =>\r\n      item.name.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setListGameState(searchResult);\r\n  };\r\n  useEffect(() => {\r\n    setListGameState(listGame);\r\n    setSearchGameState(listGame);\r\n  }, [listGame]);\r\n\r\n  useEffect(() => {\r\n    const dataRef = ref(db, 'data/');\r\n    get(dataRef)\r\n      .then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n          let convertToArr = [];\r\n          let data = snapshot.val();\r\n          for (const key in data) {\r\n            if (Object.hasOwnProperty.call(data, key)) {\r\n              const element = data[key];\r\n              convertToArr.push({ ...element });\r\n            }\r\n          }\r\n          console.log('send');\r\n          initGameDispatch(convertToArr);\r\n        } else {\r\n          console.log('No data available');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Text align=\"center\" fontSize=\"30\" fontWeight=\"bold\">\r\n        CHOOSE GAME\r\n      </Text>\r\n      <Box my=\"5\">\r\n        <InputGroup mx=\"3\">\r\n          <InputLeftElement\r\n            pointerEvents=\"none\"\r\n            children={<SearchNormal1 color=\"currentColor\" />}\r\n          />\r\n          <Input\r\n            minW=\"200px\"\r\n            width=\"50%\"\r\n            type=\"text\"\r\n            placeholder=\"search ...\"\r\n            onChange={handleSearch}\r\n          />\r\n        </InputGroup>\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"flex-start\" flexWrap=\"wrap\">\r\n        <Button\r\n          m=\"3\"\r\n          onClick={onOpen}\r\n          leftIcon={<AddSquare color=\"currentColor\" />}\r\n          colorScheme=\"blue\"\r\n        >\r\n          <Text mr=\"0\">Add Game</Text>\r\n        </Button>\r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            linkIOS: '',\r\n            linkAndroid: '',\r\n          }}\r\n          validationSchema={Yup.object({\r\n            name: Yup.string().required('Required'),\r\n            linkIOS: Yup.string(),\r\n            linkAndroid: Yup.string(),\r\n          })}\r\n          onSubmit={handleAddGame}\r\n        >\r\n          {(formik) => (\r\n            <Modal\r\n              initialFocusRef={nameRef}\r\n              finalFocusRef={finalRef}\r\n              isOpen={isOpen}\r\n              onClose={onClose}\r\n            >\r\n              <ModalOverlay />\r\n              <ModalContent>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <ModalHeader>Add detail for your game</ModalHeader>\r\n                  <ModalCloseButton />\r\n                  <ModalBody pb={6}>\r\n                    {' '}\r\n                    <FormControl\r\n                      isRequired\r\n                      isInvalid={formik.touched.name && formik.errors.name}\r\n                    >\r\n                      <FormLabel mt={4}>Name game</FormLabel>\r\n                      <Input\r\n                        ref={nameRef}\r\n                        type=\"text\"\r\n                        placeholder=\"Ex: Sky Raptor\"\r\n                        {...formik.getFieldProps('name')}\r\n                      />\r\n                      <FormErrorMessage>{formik.errors.name}</FormErrorMessage>\r\n                    </FormControl>\r\n                    <FormControl\r\n                      isInvalid={\r\n                        formik.touched.linkIOS && formik.errors.linkIOS\r\n                      }\r\n                    >\r\n                      <FormLabel mt={4}>Link store IOS</FormLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"Ex: https://apps.apple.com/us/app/sky-raptor/id1518974662\"\r\n                        {...formik.getFieldProps('linkIOS')}\r\n                      />\r\n                      <FormErrorMessage>\r\n                        {formik.errors.linkIOS}\r\n                      </FormErrorMessage>\r\n                    </FormControl>\r\n                    <FormControl\r\n                      isInvalid={\r\n                        formik.touched.linkAndroid && formik.errors.linkAndroid\r\n                      }\r\n                    >\r\n                      <FormLabel mt={4}>Link store Android</FormLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"Ex: https://play.google.com/store/apps/details?id=com.skyraptor.spaceshooter\"\r\n                        {...formik.getFieldProps('linkAndroid')}\r\n                      />\r\n                      <FormErrorMessage>\r\n                        {formik.errors.linkAndroid}\r\n                      </FormErrorMessage>\r\n                    </FormControl>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button colorScheme=\"teal\" mr={3} type=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                    <Button onClick={onClose}>Cancel</Button>\r\n                  </ModalFooter>\r\n                </form>\r\n              </ModalContent>\r\n            </Modal>\r\n          )}\r\n        </Formik>\r\n        {listGameState?.map((game) => (\r\n          <GameItem key={game.id} gameDetail={game} />\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nHomePage.propTypes = {};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listGame: state.listGameStore,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    initGameDispatch: (payload) => dispatch(InitGameAction(payload)),\r\n    addGameDispatch: (payload) => dispatch(AddGameAction(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","D:\\Tool\\hyper-ads-export\\src\\components\\GameItem\\index.jsx",["167"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Text,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  ModalFooter,\r\n  FormErrorMessage,\r\n  useToast,\r\n  AlertDialog,\r\n  AlertDialogOverlay,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowDown3, Trash } from \"iconsax-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  DeleteGameAction,\r\n  SelectGameAction,\r\n  UpdateGameAction,\r\n} from \"../../action\";\r\n\r\nconst GameItem = (props) => {\r\n  const {\r\n    gameDetail,\r\n    UpdateGameDispatch,\r\n    DeleteGameDispatch,\r\n    SelectGameDispatch,\r\n  } = props;\r\n  const { id } = gameDetail;\r\n  const [gameDetailState, setGameDetailState] = React.useState(gameDetail);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [isOpenAlert, setIsOpenAlert] = React.useState(false);\r\n  const onCloseAlert = () => setIsOpenAlert(false);\r\n  const cancelAlertRef = React.useRef();\r\n\r\n  const toast = useToast();\r\n  const nameRef = React.useRef();\r\n  const finalRef = React.useRef();\r\n\r\n  const handleUpdate = async (values, { setSubmitting, resetForm }) => {\r\n    const { name, linkStoreIOS, linkStoreAndroid } = values;\r\n    const payload = {\r\n      id,\r\n      name,\r\n      linkStoreIOS,\r\n      linkStoreAndroid,\r\n    };\r\n    UpdateGameDispatch(payload);\r\n\r\n    setSubmitting(false);\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Edit game successfully!\",\r\n      status: \"success\",\r\n      duration: 2000,\r\n      isClosable: true,\r\n    });\r\n    let timeOut = setTimeout(() => {\r\n      onClose();\r\n      clearTimeout(timeOut);\r\n    }, 2000);\r\n    setGameDetailState(payload);\r\n  };\r\n  const handleDelete = async () => {\r\n    DeleteGameDispatch({ id });\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Delete game successfully!\",\r\n      status: \"success\",\r\n      duration: 2000,\r\n      isClosable: true,\r\n    });\r\n    onCloseAlert();\r\n    let timeOut = setTimeout(() => {\r\n      onClose();\r\n      clearTimeout(timeOut);\r\n    }, 1000);\r\n  };\r\n  const handleSelectGame = () => {\r\n    SelectGameDispatch(gameDetail);\r\n  };\r\n  return (\r\n    <Box my=\"3\" ml=\"3\">\r\n      <Formik\r\n        initialValues={{\r\n          name: gameDetailState.name,\r\n          linkStoreIOS: gameDetailState.linkStoreIOS,\r\n          linkStoreAndroid: gameDetailState.linkStoreAndroid,\r\n        }}\r\n        validationSchema={Yup.object({\r\n          name: Yup.string().required(\"Required\"),\r\n          linkIOS: Yup.string(),\r\n          linkAndroid: Yup.string(),\r\n        })}\r\n        onSubmit={handleUpdate}\r\n      >\r\n        {(formik) => (\r\n          <Modal\r\n            initialFocusRef={nameRef}\r\n            finalFocusRef={finalRef}\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n          >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <ModalHeader>Edit info for your game</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody pb={6}>\r\n                  {\" \"}\r\n                  <FormControl\r\n                    isRequired\r\n                    isInvalid={formik.touched.name && formik.errors.name}\r\n                  >\r\n                    <FormLabel mt={4}>Name game</FormLabel>\r\n                    <Input\r\n                      ref={nameRef}\r\n                      type=\"text\"\r\n                      placeholder={`Ex: ${gameDetailState.name}`}\r\n                      {...formik.getFieldProps(\"name\")}\r\n                    />\r\n                    <FormErrorMessage>{formik.errors.name}</FormErrorMessage>\r\n                  </FormControl>\r\n                  <FormControl\r\n                    isInvalid={\r\n                      formik.touched.linkStoreIOS && formik.errors.linkStoreIOS\r\n                    }\r\n                  >\r\n                    <FormLabel mt={4}>Link store IOS</FormLabel>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Ex: https://apps.apple.com/us/app/sky-raptor/id1518974662\"\r\n                      {...formik.getFieldProps(\"linkStoreIOS\")}\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {formik.errors.linkStoreIOS}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                  <FormControl\r\n                    isInvalid={\r\n                      formik.touched.linkStoreAndroid &&\r\n                      formik.errors.linkStoreAndroid\r\n                    }\r\n                  >\r\n                    <FormLabel mt={4}>Link store Android</FormLabel>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Ex: https://play.google.com/store/apps/details?id=com.skyraptor.spaceshooter\"\r\n                      {...formik.getFieldProps(\"linkStoreAndroid\")}\r\n                    />\r\n                    <FormErrorMessage>\r\n                      {formik.errors.linkStoreAndroid}\r\n                    </FormErrorMessage>\r\n                  </FormControl>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button colorScheme=\"teal\" mr={3} type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                  <Button\r\n                    colorScheme=\"red\"\r\n                    onClick={() => setIsOpenAlert(true)}\r\n                    rightIcon={<Trash color=\"currentColor\" size=\"20\" />}\r\n                  >\r\n                    Delete Game\r\n                  </Button>\r\n                </ModalFooter>\r\n              </form>\r\n            </ModalContent>\r\n          </Modal>\r\n        )}\r\n      </Formik>\r\n      <Box display=\"flex\" flexWrap=\"nowrap\" onClick={handleSelectGame}>\r\n        <Link to={`/editgame/` + id}>\r\n          <Button borderRightRadius=\"0\" colorScheme=\"teal\">\r\n            <Text>{gameDetailState.name}</Text>\r\n          </Button>\r\n        </Link>\r\n        <Button px=\"0\" borderLeftRadius=\"0\" onClick={onOpen} colorScheme=\"teal\">\r\n          <ArrowDown3 m=\"0\" bg=\"tomato\" color=\"currentColor\" />\r\n        </Button>\r\n      </Box>\r\n\r\n      <AlertDialog\r\n        isOpen={isOpenAlert}\r\n        leastDestructiveRef={cancelAlertRef}\r\n        onClose={onCloseAlert}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete this game\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelAlertRef} onClick={onCloseAlert}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={handleDelete}\r\n                ml={3}\r\n                rightIcon={<Trash color=\"currentColor\" size=\"20\" />}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nGameItem.propTypes = {};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    UpdateGameDispatch: (payload) => {\r\n      dispatch(UpdateGameAction(payload));\r\n    },\r\n    DeleteGameDispatch: (payload) => {\r\n      dispatch(DeleteGameAction(payload));\r\n    },\r\n    SelectGameDispatch: (payload) => {\r\n      dispatch(SelectGameAction(payload));\r\n    },\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(GameItem);\r\n",["168","169"],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeSounds\\index.jsx",["170"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ChangeSoundsContainer from \"../../../container/ChangeSounds\";\r\n\r\nconst ChangeSoundsPage = (props) => {\r\n  return (\r\n    <>\r\n      <ChangeSoundsContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nChangeSoundsPage.propTypes = {};\r\n\r\nexport default ChangeSoundsPage;\r\n","D:\\Tool\\hyper-ads-export\\src\\pages\\Export\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\container\\ChangeAssets\\index.jsx",["171","172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":17},{"ruleId":"174","replacedBy":"182"},{"ruleId":"176","replacedBy":"183"},{"ruleId":"178","severity":1,"message":"184","line":1,"column":28,"nodeType":"180","messageId":"181","endLine":1,"endColumn":34},{"ruleId":"178","severity":1,"message":"179","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":17},{"ruleId":"174","replacedBy":"185"},{"ruleId":"176","replacedBy":"186"},{"ruleId":"174","replacedBy":"187"},{"ruleId":"176","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":12,"column":30,"nodeType":"191","messageId":"192","endLine":12,"endColumn":32},{"ruleId":"189","severity":1,"message":"190","line":19,"column":26,"nodeType":"191","messageId":"192","endLine":19,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":32,"column":34,"nodeType":"191","messageId":"192","endLine":32,"endColumn":36},{"ruleId":"193","severity":1,"message":"194","line":109,"column":11,"nodeType":"195","messageId":"196","endLine":109,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":118,"column":15,"nodeType":"180","messageId":"199","endLine":118,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":158,"column":11,"nodeType":"195","messageId":"196","endLine":158,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":168,"column":15,"nodeType":"180","messageId":"199","endLine":168,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":213,"column":11,"nodeType":"195","messageId":"196","endLine":213,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":223,"column":15,"nodeType":"180","messageId":"199","endLine":223,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":254,"column":11,"nodeType":"195","messageId":"196","endLine":254,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":264,"column":15,"nodeType":"180","messageId":"199","endLine":264,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":357,"column":11,"nodeType":"195","messageId":"196","endLine":357,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":366,"column":15,"nodeType":"180","messageId":"199","endLine":366,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":387,"column":11,"nodeType":"195","messageId":"196","endLine":387,"endColumn":33},{"ruleId":"200","severity":1,"message":"201","line":408,"column":32,"nodeType":"202","messageId":"203","endLine":408,"endColumn":34},{"ruleId":"200","severity":1,"message":"201","line":412,"column":39,"nodeType":"202","messageId":"203","endLine":412,"endColumn":41},{"ruleId":"200","severity":1,"message":"201","line":416,"column":39,"nodeType":"202","messageId":"203","endLine":416,"endColumn":41},{"ruleId":"200","severity":1,"message":"201","line":421,"column":39,"nodeType":"202","messageId":"203","endLine":421,"endColumn":41},{"ruleId":"200","severity":1,"message":"201","line":425,"column":39,"nodeType":"202","messageId":"203","endLine":425,"endColumn":41},{"ruleId":"200","severity":1,"message":"201","line":429,"column":39,"nodeType":"202","messageId":"203","endLine":429,"endColumn":41},{"ruleId":"200","severity":1,"message":"201","line":433,"column":39,"nodeType":"202","messageId":"203","endLine":433,"endColumn":41},{"ruleId":"200","severity":1,"message":"201","line":437,"column":39,"nodeType":"202","messageId":"203","endLine":437,"endColumn":41},{"ruleId":"193","severity":1,"message":"194","line":508,"column":13,"nodeType":"195","messageId":"196","endLine":508,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":517,"column":17,"nodeType":"180","messageId":"199","endLine":517,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":552,"column":13,"nodeType":"195","messageId":"196","endLine":552,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":562,"column":17,"nodeType":"180","messageId":"199","endLine":562,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":607,"column":13,"nodeType":"195","messageId":"196","endLine":607,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":617,"column":17,"nodeType":"180","messageId":"199","endLine":617,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":648,"column":13,"nodeType":"195","messageId":"196","endLine":648,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":658,"column":17,"nodeType":"180","messageId":"199","endLine":658,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":751,"column":13,"nodeType":"195","messageId":"196","endLine":751,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":760,"column":17,"nodeType":"180","messageId":"199","endLine":760,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":781,"column":13,"nodeType":"195","messageId":"196","endLine":781,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":132,"column":36,"nodeType":"191","messageId":"192","endLine":132,"endColumn":38},{"ruleId":"200","severity":1,"message":"201","line":137,"column":17,"nodeType":"202","messageId":"203","endLine":137,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":146,"column":6,"nodeType":"206","endLine":146,"endColumn":8,"suggestions":"207"},{"ruleId":"174","replacedBy":"208"},{"ruleId":"176","replacedBy":"209"},{"ruleId":"200","severity":1,"message":"201","line":43,"column":17,"nodeType":"202","messageId":"203","endLine":43,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":17},{"ruleId":"204","severity":1,"message":"210","line":100,"column":6,"nodeType":"206","endLine":100,"endColumn":8,"suggestions":"211"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":17},{"ruleId":"174","replacedBy":"212"},{"ruleId":"176","replacedBy":"213"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":139,"column":36,"nodeType":"191","messageId":"192","endLine":139,"endColumn":38},{"ruleId":"200","severity":1,"message":"201","line":151,"column":19,"nodeType":"202","messageId":"203","endLine":151,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":161,"column":6,"nodeType":"206","endLine":161,"endColumn":8,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar",["215"],["216"],"'useRef' is defined but never used.",["215"],["216"],["215"],["216"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-redeclare","'result' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ididea' and 'selectedGame.idea'. Either include them or remove the dependency array.","ArrayExpression",["217"],["215"],["216"],"React Hook useEffect has a missing dependency: 'initGameDispatch'. Either include it or remove the dependency array.",["218"],["215"],["216"],["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"220","fix":"224"},"Update the dependencies array to be: [ididea, selectedGame.idea]",{"range":"225","text":"226"},"Update the dependencies array to be: [initGameDispatch]",{"range":"227","text":"228"},{"range":"229","text":"226"},[4204,4206],"[ididea, selectedGame.idea]",[2830,2832],"[initGameDispatch]",[4563,4565]]