[{"D:\\Tool\\hyper-ads-export\\src\\index.js":"1","D:\\Tool\\hyper-ads-export\\src\\App.js":"2","D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\index.jsx":"3","D:\\Tool\\hyper-ads-export\\src\\reducer\\listGameStore.js":"4","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeAssets\\index.jsx":"5","D:\\Tool\\hyper-ads-export\\src\\function\\combineSingle.js":"6","D:\\Tool\\hyper-ads-export\\src\\Router\\index.jsx":"7","D:\\Tool\\hyper-ads-export\\src\\function\\utils.js":"8","D:\\Tool\\hyper-ads-export\\src\\constant\\index.js":"9","D:\\Tool\\hyper-ads-export\\src\\Router\\PrivateRouter\\index.jsx":"10","D:\\Tool\\hyper-ads-export\\src\\pages\\Export\\index.jsx":"11","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\SelectIdea\\index.jsx":"12","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeSounds\\index.jsx":"13","D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\index.jsx":"14","D:\\Tool\\hyper-ads-export\\src\\components\\DragDrop\\index.jsx":"15","D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\styles.js":"16","D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\styles.js":"17","D:\\Tool\\hyper-ads-export\\src\\container\\ChangeAssets\\index.jsx":"18","D:\\Tool\\hyper-ads-export\\src\\container\\ChangeSounds\\index.jsx":"19","D:\\Tool\\hyper-ads-export\\src\\components\\GameItem\\index.jsx":"20","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\index.jsx":"21","D:\\Tool\\hyper-ads-export\\src\\services\\firebaseConfig.js":"22","D:\\Tool\\hyper-ads-export\\src\\pages\\Home\\index.jsx":"23","D:\\Tool\\hyper-ads-export\\src\\components\\IdeaItem\\index.jsx":"24","D:\\Tool\\hyper-ads-export\\src\\action\\index.js":"25"},{"size":881,"mtime":1636940018335,"results":"26","hashOfConfig":"27"},{"size":262,"mtime":1636940018332,"results":"28","hashOfConfig":"27"},{"size":6127,"mtime":1637725453810,"results":"29","hashOfConfig":"27"},{"size":2409,"mtime":1637725453814,"results":"30","hashOfConfig":"27"},{"size":333,"mtime":1637746652331,"results":"31","hashOfConfig":"27"},{"size":34772,"mtime":1637725453812,"results":"32","hashOfConfig":"27"},{"size":301,"mtime":1636940018332,"results":"33","hashOfConfig":"27"},{"size":2463,"mtime":1638268382434,"results":"34","hashOfConfig":"27"},{"size":293,"mtime":1637725453811,"results":"35","hashOfConfig":"27"},{"size":2761,"mtime":1638269399551,"results":"36","hashOfConfig":"27"},{"size":277,"mtime":1637725453813,"results":"37","hashOfConfig":"27"},{"size":8791,"mtime":1637725453813,"results":"38","hashOfConfig":"27"},{"size":338,"mtime":1637746731024,"results":"39","hashOfConfig":"27"},{"size":3991,"mtime":1637725453811,"results":"40","hashOfConfig":"27"},{"size":1200,"mtime":1637751578191,"results":"41","hashOfConfig":"27"},{"size":2131,"mtime":1636940018333,"results":"42","hashOfConfig":"27"},{"size":601,"mtime":1637216177394,"results":"43","hashOfConfig":"27"},{"size":2858,"mtime":1637749708113,"results":"44","hashOfConfig":"27"},{"size":2256,"mtime":1637751743894,"results":"45","hashOfConfig":"27"},{"size":11456,"mtime":1637725453810,"results":"46","hashOfConfig":"27"},{"size":2005,"mtime":1637725453813,"results":"47","hashOfConfig":"27"},{"size":928,"mtime":1638264507685,"results":"48","hashOfConfig":"27"},{"size":9819,"mtime":1637725453814,"results":"49","hashOfConfig":"27"},{"size":9825,"mtime":1637725453810,"results":"50","hashOfConfig":"27"},{"size":904,"mtime":1637725453809,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1icqvp2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"D:\\Tool\\hyper-ads-export\\src\\index.js",[],["121","122"],"D:\\Tool\\hyper-ads-export\\src\\App.js",[],["123","124"],"D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\index.jsx",["125"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Flex,\r\n    useColorMode,\r\n    Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n    ExportSquare,\r\n    Home2,\r\n    Game,\r\n    Category2,\r\n    Sun1,\r\n    Moon,\r\n    Logout,\r\n    GalleryEdit,\r\n    AudioSquare,\r\n} from \"iconsax-react\";\r\nimport { NaviStyle } from \"./styles\";\r\nconst NavigationBar = (props) => {\r\n    const getlocation = useLocation();\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const [navSize, setNavSize] = useState(\"small\");\r\n    const [location, setLocation] = useState(\"/home\");\r\n\r\n    useEffect(() => {\r\n        console.log(\r\n            \"ðŸš€ ~ file: index.jsx ~ line 26 ~ NavigationBar ~ params\",\r\n            getlocation\r\n        );\r\n        setLocation(getlocation.pathname);\r\n    }, [getlocation]);\r\n\r\n    return (\r\n        <NaviStyle>\r\n            <div\r\n                className=\"options\"\r\n                style={\r\n                    navSize === \"large\"\r\n                        ? { width: \"200px\" }\r\n                        : { width: \"min-content\" }\r\n                }\r\n            >\r\n                <Flex>\r\n                    <Button\r\n                        className=\"menu-alt\"\r\n                        onClick={() =>\r\n                            navSize === \"small\"\r\n                                ? setNavSize(\"large\")\r\n                                : setNavSize(\"small\")\r\n                        }\r\n                    >\r\n                        <Category2\r\n                            size=\"20\"\r\n                            color=\"currentColor\"\r\n                            variant=\"Outline\"\r\n                        />\r\n                    </Button>\r\n                    {navSize === \"large\" ? (\r\n                        <Button\r\n                            mx=\"5\"\r\n                            className=\"menu-alt\"\r\n                            onClick={() => toggleColorMode()}\r\n                        >\r\n                            {colorMode === \"dark\" ? (\r\n                                <Moon\r\n                                    size=\"20\"\r\n                                    color=\"currentColor\"\r\n                                    variant=\"Outline\"\r\n                                />\r\n                            ) : (\r\n                                <Sun1\r\n                                    size=\"20\"\r\n                                    color=\"currentColor\"\r\n                                    variant=\"Outline\"\r\n                                />\r\n                            )}\r\n                        </Button>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </Flex>\r\n                <Link to=\"/\">\r\n                    <div className={location === \"/\" ? \"item active\" : \"item\"}>\r\n                        <Box mx=\"5\">\r\n                            <Home2\r\n                                size=\"20\"\r\n                                color=\"currentColor\"\r\n                                variant={location === \"/\" ? \"Bold\" : \"Outline\"}\r\n                            />\r\n                        </Box>\r\n                        {navSize === \"large\" ? <p>Home</p> : \"\"}\r\n                    </div>\r\n                </Link>\r\n                <div className={location.includes(\"changeassets\") ? \"item active\" : \"item\"}>\r\n                    <Box mx=\"5\">\r\n                        <GalleryEdit\r\n                            size=\"20\"\r\n                            color=\"currentColor\"\r\n                            variant={location.includes(\"changeassets\") ? \"Bold\" : \"Outline\"}\r\n                        />\r\n                    </Box>\r\n                    {navSize === \"large\" ? <p>Change Assets</p> : \"\"}\r\n                </div>\r\n                <div className={location.includes(\"changesounds\") ? \"item active\" : \"item\"}>\r\n                    <Box mx=\"5\">\r\n                        <AudioSquare\r\n                            size=\"20\"\r\n                            color=\"currentColor\"\r\n                            variant={location.includes(\"changesounds\") ? \"Bold\" : \"Outline\"}\r\n                        />\r\n                    </Box>\r\n                    {navSize === \"large\" ? <p>Change Sounds</p> : \"\"}\r\n                </div>\r\n                    <div\r\n                        className={\r\n                            location.includes(\"export\") ? \"item active\" : \"item\"\r\n                        }\r\n                    >\r\n                        <Box mx=\"5\">\r\n                            <ExportSquare\r\n                                size=\"20\"\r\n                                color=\"currentColor\"\r\n                                variant={\r\n                                    location === \"/export\" ? \"Bold\" : \"Outline\"\r\n                                }\r\n                            />\r\n                        </Box>\r\n                        {navSize === \"large\" ? <p>Export</p> : \"\"}\r\n                    </div>\r\n            </div>\r\n            <div className=\"user-wrapper\">\r\n                <div className=\"user\">\r\n                    <Tooltip hasArrow label=\"My name name\">\r\n                        <Avatar\r\n                            size=\"sm\"\r\n                            name=\"Kola Tioluwani\"\r\n                            src=\"https://bit.ly/tioluwani-kolawole\"\r\n                        />\r\n                    </Tooltip>\r\n                    {navSize === \"large\" ? (\r\n                        <div className=\"sign-out\">\r\n                            <p>Sign Out</p>\r\n                            <Box mx=\"5\">\r\n                                <Logout\r\n                                    size=\"20\"\r\n                                    color=\"currentColor\"\r\n                                    variant=\"Outline\"\r\n                                />\r\n                            </Box>\r\n                        </div>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </NaviStyle>\r\n    );\r\n};\r\n\r\nNavigationBar.propTypes = {};\r\n\r\nexport default NavigationBar;\r\n","D:\\Tool\\hyper-ads-export\\src\\reducer\\listGameStore.js",[],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeAssets\\index.jsx",["126"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ChangeAssetsContainer from '../../../container/ChangeAssets'\r\n\r\nconst ChangeAssetsPage = props => {\r\n    return (\r\n        <>\r\n            <ChangeAssetsContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nChangeAssetsPage.propTypes = {\r\n\r\n}\r\n\r\nexport default ChangeAssetsPage\r\n",["127","128"],"D:\\Tool\\hyper-ads-export\\src\\function\\combineSingle.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"D:\\Tool\\hyper-ads-export\\src\\Router\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\function\\utils.js",["148"],"D:\\Tool\\hyper-ads-export\\src\\constant\\index.js",[],["149","150"],"D:\\Tool\\hyper-ads-export\\src\\Router\\PrivateRouter\\index.jsx",[],"D:\\Tool\\hyper-ads-export\\src\\pages\\Export\\index.jsx",["151"],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\SelectIdea\\index.jsx",["152","153"],"D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\ChangeSounds\\index.jsx",["154"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ChangeSoundsContainer from \"../../../container/ChangeSounds\";\r\n\r\nconst ChangeSoundsPage = (props) => {\r\n    return (\r\n        <>\r\n            <ChangeSoundsContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nChangeSoundsPage.propTypes = {};\r\n\r\nexport default ChangeSoundsPage;\r\n",["155","156"],"D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\index.jsx",["157"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { SaveToContainer } from \"./styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { CombineAndExport } from \"../../function/combineSingle\";\r\nimport { useParams } from \"react-router-dom\";\r\n//use import syntax wil error\r\nconst electron = window.require(\"electron\");\r\nlet dialog = electron.remote.dialog;\r\n\r\nconst SaveTo = (props) => {\r\n    const useparams = useParams();\r\n    const params = useparams.id;\r\n    const toast = useToast();\r\n    const { listGame } = props;\r\n    const [directoryState, setDirectoryState] = useState(\"Not selected yet\");\r\n    const [ideaGameState, setIdeaGameState] = useState(\"\");\r\n\r\n    const handleDirectory = async () => {\r\n        const result = await dialog.showOpenDialog({\r\n            properties: [\"openDirectory\"],\r\n        });\r\n        console.log(\"directories selected\", result);\r\n        if (result.filePaths.length > 0) {\r\n            setDirectoryState((pre) => result.filePaths);\r\n        }\r\n    };\r\n    const handlIdeaGame = (e) => {\r\n        setIdeaGameState(e.target.value);\r\n    };\r\n    const ResetFeild = () => {\r\n        setIdeaGameState(\"sky\");\r\n        setIdeaGameState(\"\");\r\n        setDirectoryState(\"Not selected yet\");\r\n    };\r\n    const handleExportAds = () => {\r\n        if (!listGame) {\r\n            toast({\r\n                title: \"Please Choose File!\",\r\n                status: \"warning\",\r\n                position: \"top\",\r\n                duration: 4000,\r\n                isClosable: true,\r\n            });\r\n        } else if (!ideaGameState || directoryState === \"Not selected yet\") {\r\n            toast({\r\n                title: \"Please complete all fields!\",\r\n                status: \"warning\",\r\n                position: \"top\",\r\n                duration: 4000,\r\n                isClosable: true,\r\n            });\r\n        } else {\r\n            CombineAndExport(\r\n                listGame.linkBaseCode,\r\n                listGame.name,\r\n                ideaGameState,\r\n                directoryState\r\n            );\r\n            toast({\r\n                title: \"Export Ads successfully!\",\r\n                status: \"success\",\r\n                position: \"top\",\r\n                duration: 4000,\r\n                isClosable: true,\r\n            });\r\n            ResetFeild();\r\n        }\r\n    };\r\n    return (\r\n        <SaveToContainer>\r\n            <div className=\"setup\">\r\n                <div className=\"name-idea\">\r\n                    <FormControl id=\"ideaGame\" isRequired>\r\n                        <FormLabel>Idea for game</FormLabel>\r\n                        <Input\r\n                            w=\"70%\"\r\n                            placeholder=\"Ex: Sky solo squad...\"\r\n                            onChange={handlIdeaGame}\r\n                            value={ideaGameState}\r\n                        />\r\n                    </FormControl>\r\n                </div>\r\n                <div className=\"save-dir\">\r\n                    <Input\r\n                        w=\"50%\"\r\n                        className=\"mgr30\"\r\n                        isDisabled\r\n                        placeholder=\"medium size\"\r\n                        size=\"md\"\r\n                        value={directoryState}\r\n                    />\r\n                    <Button\r\n                        mx=\"5\"\r\n                        colorScheme=\"teal\"\r\n                        variant=\"outline\"\r\n                        onClick={handleDirectory}\r\n                    >\r\n                        Save to ...\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <Button colorScheme=\"teal\" size=\"lg\" onClick={handleExportAds}>\r\n                Export Ads\r\n            </Button>\r\n        </SaveToContainer>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        listGame: state.listGameStore,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(SaveTo);\r\n","D:\\Tool\\hyper-ads-export\\src\\components\\DragDrop\\index.jsx",["158"],"import { Box } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst DragDrop = (props) => {\r\n\tconst { text, handleFile, type } = props;\r\n    console.log(props);\r\n\tconst { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n\t\taccept: type,\r\n\t\tmaxFiles: 1,\r\n\t});\r\n\tconst files = acceptedFiles.map((file) => {\r\n\t\thandleFile(file);\r\n        console.log(file);\r\n\t\treturn (\r\n\t\t\t<li key={file.path}>\r\n\t\t\t\t{file.path} - {file.size} bytes\r\n\t\t\t</li>\r\n\t\t);\r\n\t});\r\n    console.log(files);\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tw=\"100%\"\r\n\t\t\tborder=\"2px dashed\"\r\n\t\t\tp=\"10px\"\r\n\t\t\t{...getRootProps({\r\n\t\t\t\tclassName: \"dropzone\",\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<p>\r\n\t\t\t\t{files.length ? (\r\n\t\t\t\t\t<aside>\r\n\t\t\t\t\t\t<h4 className=\"path-select\">\r\n\t\t\t\t\t\t\t{type == \"image/jpeg, image/png\" ? (\r\n\t\t\t\t\t\t\t\t<img style={{maxHeight:\"100px\"}} src={files[0].key} alt=\"new assets\" />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<audio controls>\r\n\t\t\t\t\t\t\t\t\t<source src={files[0].key} />\r\n\t\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t</aside>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tDrag 'n' drop new file {text} here <br />\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t</p>\r\n\t\t</Box>\r\n\t);\r\n};\r\nexport default DragDrop;\r\n","D:\\Tool\\hyper-ads-export\\src\\components\\NavigationBar\\styles.js",[],"D:\\Tool\\hyper-ads-export\\src\\components\\SaveTo\\styles.js",[],"D:\\Tool\\hyper-ads-export\\src\\container\\ChangeAssets\\index.jsx",["159"],"import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n\tImage,\r\n\tButton,\r\n\tTable,\r\n\tThead,\r\n\tTbody,\r\n\tTr,\r\n\tTh,\r\n\tTd,\r\n\tBox,\r\n\tFlex,\r\n} from \"@chakra-ui/react\";\r\nimport { ExportSquare, AudioSquare } from \"iconsax-react\";\r\nimport DragDrop from \"../../components/DragDrop\";\r\nvar fs = window.require('fs');\r\nconst ChangeAssetsContainer = (props) => {\r\n    console.log(\"appear\");\r\n\tconst params = useParams();\r\n\tconst idgame = params.idgame;\r\n\tconst ididea = params.ididea;\r\n\r\n\tconst handleFile = (file) => {\r\n\t\tconsole.log(file.path);\r\n\t\tvar imageAsBase64 = fs.readFileSync(file.path, 'base64');\r\n        console.log(\"ðŸš€ ~ file: index.jsx ~ line 27 ~ handleFile ~ resultB64\", imageAsBase64)\r\n        \r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box mb=\"5\">\r\n\t\t\t\t<Table w=\"100%\" my=\"5\" variant=\"striped\" colorScheme=\"gray\">\r\n\t\t\t\t\t<Thead>\r\n\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t<Th>Name Asset</Th>\r\n\t\t\t\t\t\t\t<Th>Current Asset</Th>\r\n\t\t\t\t\t\t\t<Th>Current Size</Th>\r\n\t\t\t\t\t\t\t<Th>New Asset</Th>\r\n\t\t\t\t\t\t\t<Th>New Size</Th>\r\n\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t</Thead>\r\n\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t<Td>inches</Td>\r\n\t\t\t\t\t\t\t<Td>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tboxSize=\"100px\"\r\n\t\t\t\t\t\t\t\t\tobjectFit=\"cover\"\r\n\t\t\t\t\t\t\t\t\tsrc=\"https://bit.ly/sage-adebayo\"\r\n\t\t\t\t\t\t\t\t\talt=\"Segun Adebayo\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Td>\r\n\t\t\t\t\t\t\t<Td>30x50</Td>\r\n\t\t\t\t\t\t\t<Td>\r\n\t\t\t\t\t\t\t\t{/* <Image\r\n                                    boxSize=\"100px\"\r\n                                    objectFit=\"cover\"\r\n                                    src=\"https://bit.ly/sage-adebayo\"\r\n                                    alt=\"Segun Adebayo\"\r\n                                /> */}\r\n\t\t\t\t\t\t\t\t<DragDrop\r\n\t\t\t\t\t\t\t\t\ttext=\"asset\"\r\n\t\t\t\t\t\t\t\t\thandleFile={handleFile}\r\n\t\t\t\t\t\t\t\t\ttype=\"image/jpeg, image/png\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Td>\r\n\t\t\t\t\t\t\t<Td>30x50</Td>\r\n\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t</Tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t\t<Flex justifyContent=\"space-between\">\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Button mb=\"5\" colorScheme=\"green\">\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\t\t`/editgame/` +\r\n\t\t\t\t\t\t\t\tidgame +\r\n\t\t\t\t\t\t\t\t\"/\" +\r\n\t\t\t\t\t\t\t\tididea +\r\n\t\t\t\t\t\t\t\t`/changesounds`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tmb=\"5\"\r\n\t\t\t\t\t\t\t\tcolorScheme=\"green\"\r\n\t\t\t\t\t\t\t\trightIcon={\r\n\t\t\t\t\t\t\t\t\t<AudioSquare\r\n\t\t\t\t\t\t\t\t\t\tsize=\"20\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"currentColor\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tChange Sounds\r\n\t\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to={\"/export/\" + idgame + `/` + ididea}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tmb=\"5\"\r\n\t\t\t\t\t\t\t\tml=\"5\"\r\n\t\t\t\t\t\t\t\tcolorScheme=\"green\"\r\n\t\t\t\t\t\t\t\trightIcon={\r\n\t\t\t\t\t\t\t\t\t<ExportSquare\r\n\t\t\t\t\t\t\t\t\t\tsize=\"20\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"currentColor\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tExport Now\r\n\t\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nChangeAssetsContainer.propTypes = {};\r\n\r\nexport default ChangeAssetsContainer;\r\n","D:\\Tool\\hyper-ads-export\\src\\container\\ChangeSounds\\index.jsx",["160"],"import React from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n\tFlex,\r\n\tButton,\r\n\tTable,\r\n\tThead,\r\n\tTbody,\r\n\tTr,\r\n\tTh,\r\n\tTd,\r\n\tBox,\r\n} from \"@chakra-ui/react\";\r\nimport { ExportSquare, GalleryEdit } from \"iconsax-react\";\r\nimport DragDrop from \"../../components/DragDrop\";\r\nvar fs = window.require(\"fs\");\r\n\r\nconst ChangeSoundsContainer = (props) => {\r\n\tconst params = useParams();\r\n\tconst ididea = params.ididea;\r\n\tconst idgame = params.idgame;\r\n\tconst handleFile = (file) => {\r\n\t\tconsole.log(file.path);\r\n\t\tvar imageAsBase64 = fs.readFileSync(file.path, \"base64\");\r\n\t\tconsole.log(\r\n\t\t\t\"ðŸš€ ~ file: index.jsx ~ line 27 ~ handleFile ~ resultB64\",\r\n\t\t\timageAsBase64\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box mb=\"5\">\r\n\t\t\t\t<Table my=\"5\" variant=\"striped\" colorScheme=\"gray\" w=\"100%\">\r\n\t\t\t\t\t<Thead>\r\n\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t<Th>Name Sound</Th>\r\n\t\t\t\t\t\t\t<Th>Current Sound</Th>\r\n\t\t\t\t\t\t\t<Th>New Sound</Th>\r\n\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t</Thead>\r\n\t\t\t\t\t<Tbody>\r\n\t\t\t\t\t\t<Tr>\r\n\t\t\t\t\t\t\t<Td>inches</Td>\r\n\t\t\t\t\t\t\t<Td>\r\n\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t<audio controls>\r\n\t\t\t\t\t\t\t\t\t<source src=\"horse.ogg\" />\r\n\t\t\t\t\t\t\t\t</audio>\r\n\t\t\t\t\t\t\t</Td>\r\n\t\t\t\t\t\t\t<Td>\r\n\t\t\t\t\t\t\t\t<DragDrop\r\n\t\t\t\t\t\t\t\t\ttext=\"audio\"\r\n\t\t\t\t\t\t\t\t\thandleFile={handleFile}\r\n\t\t\t\t\t\t\t\t\ttype=\"audio/mp3, audio/mpeg\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Td>\r\n\t\t\t\t\t\t</Tr>\r\n\t\t\t\t\t</Tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t\t<Flex justifyContent=\"space-between\">\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Button mb=\"5\" colorScheme=\"green\">\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\t\t`/editgame/` +\r\n\t\t\t\t\t\t\t\tidgame +\r\n\t\t\t\t\t\t\t\t\"/\" +\r\n\t\t\t\t\t\t\t\tididea +\r\n\t\t\t\t\t\t\t\t`/changeassets`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tmb=\"5\"\r\n\t\t\t\t\t\t\t\tcolorScheme=\"green\"\r\n\t\t\t\t\t\t\t\trightIcon={<GalleryEdit color=\"currentColor\" />}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tChange Assets\r\n\t\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to={\"/export/\" + idgame + `/` + ididea}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tml=\"5\"\r\n\t\t\t\t\t\t\t\tmb=\"5\"\r\n\t\t\t\t\t\t\t\tcolorScheme=\"green\"\r\n\t\t\t\t\t\t\t\trightIcon={\r\n\t\t\t\t\t\t\t\t\t<ExportSquare color=\"currentColor\" />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tExport Now\r\n\t\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nChangeSoundsContainer.propTypes = {};\r\n\r\nexport default ChangeSoundsContainer;\r\n",["161","162"],"D:\\Tool\\hyper-ads-export\\src\\components\\GameItem\\index.jsx",["163"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    Input,\r\n    Box,\r\n    Button,\r\n    Text,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalCloseButton,\r\n    ModalBody,\r\n    FormControl,\r\n    FormLabel,\r\n    ModalFooter,\r\n    FormErrorMessage,\r\n    useToast,\r\n    AlertDialog,\r\n    AlertDialogOverlay,\r\n    AlertDialogContent,\r\n    AlertDialogHeader,\r\n    AlertDialogBody,\r\n    AlertDialogFooter,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowDown3, Trash } from \"iconsax-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    DeleteGameAction,\r\n    SaveCurrentGameAction,\r\n    UpdateGameAction,\r\n} from \"../../action\";\r\nconst GameItem = (props) => {\r\n    const {\r\n        gameDetail,\r\n        UpdateGameDispatch,\r\n        DeleteGameDispatch,\r\n        SaveCurrentGameDispatch,\r\n    } = props;\r\n    const { id } = gameDetail;\r\n    const [gameDetailState, setGameDetailState] = React.useState(gameDetail);\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [isOpenAlert, setIsOpenAlert] = React.useState(false);\r\n    const onCloseAlert = () => setIsOpenAlert(false);\r\n    const cancelAlertRef = React.useRef();\r\n\r\n    const toast = useToast();\r\n    const nameRef = React.useRef();\r\n    const finalRef = React.useRef();\r\n\r\n    const handleUpdate = async (values, { setSubmitting, resetForm }) => {\r\n        const { name, linkStoreIOS, linkStoreAndroid } = values;\r\n        const payload = {\r\n            id,\r\n            name,\r\n            linkStoreIOS,\r\n            linkStoreAndroid,\r\n        };\r\n        UpdateGameDispatch(payload);\r\n        setGameDetailState(payload);\r\n        setSubmitting(false);\r\n        toast({\r\n            position: \"top\",\r\n            title: \"Edit game successfully!\",\r\n            status: \"success\",\r\n            duration: 2000,\r\n            isClosable: true,\r\n        });\r\n        let timeOut = setTimeout(() => {\r\n            onClose();\r\n            clearTimeout(timeOut);\r\n        }, 2000);\r\n    };\r\n    const handleDelete = async () => {\r\n        const payload = {\r\n            id,\r\n        };\r\n        DeleteGameDispatch(payload);\r\n        toast({\r\n            position: \"top\",\r\n            title: \"Delete game successfully!\",\r\n            status: \"success\",\r\n            duration: 2000,\r\n            isClosable: true,\r\n        });\r\n        let timeOut = setTimeout(() => {\r\n            onClose();\r\n            clearTimeout(timeOut);\r\n        }, 2000);\r\n    };\r\n    const handleSelectGame = () => {\r\n        SaveCurrentGameDispatch(gameDetail);\r\n    };\r\n    return (\r\n        <Box my=\"3\" ml=\"3\">\r\n            <Formik\r\n                initialValues={{\r\n                    name: gameDetailState.name,\r\n                    linkStoreIOS: gameDetailState.linkStoreIOS,\r\n                    linkStoreAndroid: gameDetailState.linkStoreAndroid,\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    name: Yup.string().required(\"Required\"),\r\n                    linkIOS: Yup.string(),\r\n                    linkAndroid: Yup.string(),\r\n                })}\r\n                onSubmit={handleUpdate}\r\n            >\r\n                {(formik) => (\r\n                    <Modal\r\n                        initialFocusRef={nameRef}\r\n                        finalFocusRef={finalRef}\r\n                        isOpen={isOpen}\r\n                        onClose={onClose}\r\n                    >\r\n                        <ModalOverlay />\r\n                        <ModalContent>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <ModalHeader>\r\n                                    Edit info for your game\r\n                                </ModalHeader>\r\n                                <ModalCloseButton />\r\n                                <ModalBody pb={6}>\r\n                                    {\" \"}\r\n                                    <FormControl\r\n                                        isRequired\r\n                                        isInvalid={\r\n                                            formik.touched.name &&\r\n                                            formik.errors.name\r\n                                        }\r\n                                    >\r\n                                        <FormLabel mt={4}>Name game</FormLabel>\r\n                                        <Input\r\n                                            ref={nameRef}\r\n                                            type=\"text\"\r\n                                            placeholder=\"Ex: Sky Raptor\"\r\n                                            {...formik.getFieldProps(\"name\")}\r\n                                        />\r\n                                        <FormErrorMessage>\r\n                                            {formik.errors.name}\r\n                                        </FormErrorMessage>\r\n                                    </FormControl>\r\n                                    <FormControl\r\n                                        isInvalid={\r\n                                            formik.touched.linkStoreIOS &&\r\n                                            formik.errors.linkStoreIOS\r\n                                        }\r\n                                    >\r\n                                        <FormLabel mt={4}>\r\n                                            Link store IOS\r\n                                        </FormLabel>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Ex: https://apps.apple.com/us/app/sky-raptor/id1518974662\"\r\n                                            {...formik.getFieldProps(\r\n                                                \"linkStoreIOS\"\r\n                                            )}\r\n                                        />\r\n                                        <FormErrorMessage>\r\n                                            {formik.errors.linkStoreIOS}\r\n                                        </FormErrorMessage>\r\n                                    </FormControl>\r\n                                    <FormControl\r\n                                        isInvalid={\r\n                                            formik.touched.linkStoreAndroid &&\r\n                                            formik.errors.linkStoreAndroid\r\n                                        }\r\n                                    >\r\n                                        <FormLabel mt={4}>\r\n                                            Link store Android\r\n                                        </FormLabel>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Ex: https://play.google.com/store/apps/details?id=com.skyraptor.spaceshooter\"\r\n                                            {...formik.getFieldProps(\r\n                                                \"linkStoreAndroid\"\r\n                                            )}\r\n                                        />\r\n                                        <FormErrorMessage>\r\n                                            {formik.errors.linkStoreAndroid}\r\n                                        </FormErrorMessage>\r\n                                    </FormControl>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button\r\n                                        colorScheme=\"teal\"\r\n                                        mr={3}\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                    <Button\r\n                                        colorScheme=\"red\"\r\n                                        onClick={() => setIsOpenAlert(true)}\r\n                                        rightIcon={\r\n                                            <Trash\r\n                                                schemeColor=\"currentColor\"\r\n                                                size=\"20\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        Delete Game\r\n                                    </Button>\r\n                                </ModalFooter>\r\n                            </form>\r\n                        </ModalContent>\r\n                    </Modal>\r\n                )}\r\n            </Formik>\r\n            <Box display=\"flex\" flexWrap=\"nowrap\" onClick={handleSelectGame}>\r\n                <Link to={`/editgame/` + id}>\r\n                    <Button borderRightRadius=\"0\" colorScheme=\"teal\">\r\n                        <Text>{gameDetailState.name}</Text>\r\n                    </Button>\r\n                </Link>\r\n                <Button\r\n                    px=\"0\"\r\n                    borderLeftRadius=\"0\"\r\n                    onClick={onOpen}\r\n                    colorScheme=\"teal\"\r\n                >\r\n                    <ArrowDown3 m=\"0\" bg=\"tomato\" color=\"currentColor\" />\r\n                </Button>\r\n            </Box>\r\n\r\n            <AlertDialog\r\n                isOpen={isOpenAlert}\r\n                leastDestructiveRef={cancelAlertRef}\r\n                onClose={onCloseAlert}\r\n            >\r\n                <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                            Delete this game\r\n                        </AlertDialogHeader>\r\n\r\n                        <AlertDialogBody>\r\n                            Are you sure? You can't undo this action afterwards.\r\n                        </AlertDialogBody>\r\n\r\n                        <AlertDialogFooter>\r\n                            <Button ref={cancelAlertRef} onClick={onCloseAlert}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                colorScheme=\"red\"\r\n                                onClick={handleDelete}\r\n                                ml={3}\r\n                                rightIcon={\r\n                                    <Trash\r\n                                        schemeColor=\"currentColor\"\r\n                                        size=\"20\"\r\n                                    />\r\n                                }\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        </Box>\r\n    );\r\n};\r\n\r\nGameItem.propTypes = {};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        UpdateGameDispatch: (payload) => {\r\n            dispatch(UpdateGameAction(payload));\r\n        },\r\n        DeleteGameDispatch: (payload) => {\r\n            dispatch(DeleteGameAction(payload));\r\n        },\r\n        SaveCurrentGameDispatch: (payload) => {\r\n            dispatch(SaveCurrentGameAction(payload));\r\n        },\r\n    };\r\n};\r\nexport default connect(null, mapDispatchToProps)(GameItem);\r\n","D:\\Tool\\hyper-ads-export\\src\\pages\\EditGame\\index.jsx",["164","165"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Text, Flex, Box } from \"@chakra-ui/react\";\r\nimport { GalleryEdit, AudioSquare, ArrowRight } from \"iconsax-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useParams} from 'react-router-dom';\r\nconst fs = window.require(\"fs\");\r\nconst path = window.require(\"path\");\r\nconst EditGame = (props) => {\r\n    const useparams = useParams();\r\n    useEffect(() => {\r\n        const getAllFromDir = (source) =>\r\n            fs.readdirSync(source).map((name) => path.join(source, name));\r\n\t}, []);\r\n\treturn (\r\n\t\t<Flex align=\"center\" direction=\"column\" w=\"100%\" my=\"30px\">\r\n            <Box w=\"300px\">\r\n                <Link to=\"changeassets\">\r\n                    <Button w=\"300px\" p=\"50px\" mb=\"5\" colorScheme=\"green\">\r\n                        <Text mr=\"3\">Change Assets</Text>\r\n                        <GalleryEdit size=\"20\" color=\"currentColor\" />\r\n                    </Button>\r\n                </Link>\r\n            </Box>\r\n            <Box w=\"300px\">\r\n                <Link to=\"changesounds\">\r\n                    <Button w=\"300px\" p=\"50px\" mb=\"5\" colorScheme=\"green\">\r\n                        <Text mr=\"3\">Change Sounds</Text>\r\n                        <AudioSquare size=\"20\" color=\"currentColor\" />\r\n                    </Button>\r\n                </Link>\r\n            </Box>\r\n            <Box w=\"300px\">\r\n                <Link to={\"/export/\"+useparams.idgame+`/`+useparams.ididea}>\r\n                    <Button\r\n                        w=\"300px\"\r\n                        p=\"50px\"\r\n                        mb=\"5\"\r\n                        colorScheme=\"green\"\r\n                        mt=\"50px\"\r\n                    >\r\n                        <Text mr=\"3\">No, Just export</Text>\r\n                        <ArrowRight size=\"20\" color=\"currentColor\" />\r\n                    </Button>\r\n                </Link>\r\n            </Box>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nEditGame.propTypes = {};\r\n\r\nexport default EditGame;\r\n",["166","167"],"D:\\Tool\\hyper-ads-export\\src\\services\\firebaseConfig.js",[],["168","169"],"D:\\Tool\\hyper-ads-export\\src\\pages\\Home\\index.jsx",["170"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    InputLeftElement,\r\n    InputGroup,\r\n    Input,\r\n    Box,\r\n    Button,\r\n    Text,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalCloseButton,\r\n    ModalBody,\r\n    FormControl,\r\n    FormLabel,\r\n    ModalFooter,\r\n    FormErrorMessage,\r\n    useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { SearchNormal1, AddSquare } from \"iconsax-react\";\r\nimport GameItem from \"../../components/GameItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { AddGameAction } from \"../../action\";\r\nconst HomePage = (props) => {\r\n    const { listGame, addGameDispatch } = props;\r\n    const toast = useToast();\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [listGameState, setListGameState] = React.useState(listGame);\r\n    const nameRef = React.useRef();\r\n    const finalRef = React.useRef();\r\n\r\n    const handleSubmit = async (values, { setSubmitting, resetForm }) => {\r\n        const { name, linkIOS, linkAndroid } = values;\r\n        const payload = {\r\n            id: uuid(),\r\n            name: name,\r\n            linkStoreIOS: linkIOS,\r\n            linkStoreAndroid: linkAndroid,\r\n            idea: [],\r\n        };\r\n        let a = addGameDispatch(payload);\r\n        console.log(a);\r\n\r\n        toast({\r\n            position: \"top\",\r\n            title: \"Add game successfully!\",\r\n            status: \"success\",\r\n            duration: 2000,\r\n            isClosable: true,\r\n        });\r\n        let timeOut = setTimeout(() => {\r\n            setSubmitting(false);\r\n            resetForm();\r\n            onClose();\r\n            clearTimeout(timeOut);\r\n        }, 2000);\r\n    };\r\n    const handleSearch = (event) => {\r\n        const { value } = event.target;\r\n        let searchResult = listGame.filter((item) =>\r\n            item.name.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n        setListGameState(searchResult);\r\n    };\r\n    useEffect(() => {\r\n        setListGameState(listGame);\r\n    }, [listGame]);\r\n    return (\r\n        <>\r\n            <Text align=\"center\" fontSize=\"30\" fontWeight=\"bold\">\r\n                CHOOSE GAME\r\n            </Text>\r\n            <Box my=\"5\">\r\n                <InputGroup mx=\"3\">\r\n                    <InputLeftElement\r\n                        pointerEvents=\"none\"\r\n                        children={<SearchNormal1 color=\"currentColor\" />}\r\n                    />\r\n                    <Input\r\n                        minW=\"200px\"\r\n                        width=\"50%\"\r\n                        type=\"text\"\r\n                        placeholder=\"search ...\"\r\n                        onChange={handleSearch}\r\n                    />\r\n                </InputGroup>\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"flex-start\" flexWrap=\"wrap\">\r\n                <Button\r\n                    m=\"3\"\r\n                    onClick={onOpen}\r\n                    leftIcon={<AddSquare color=\"currentColor\" />}\r\n                    colorScheme=\"blue\"\r\n                >\r\n                    <Text mr=\"0\">Add Game</Text>\r\n                </Button>\r\n                <Formik\r\n                    initialValues={{\r\n                        name: \"\",\r\n                        linkIOS: \"\",\r\n                        linkAndroid: \"\",\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        name: Yup.string().required(\"Required\"),\r\n                        linkIOS: Yup.string(),\r\n                        linkAndroid: Yup.string(),\r\n                    })}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {(formik) => (\r\n                        <Modal\r\n                            initialFocusRef={nameRef}\r\n                            finalFocusRef={finalRef}\r\n                            isOpen={isOpen}\r\n                            onClose={onClose}\r\n                        >\r\n                            <ModalOverlay />\r\n                            <ModalContent>\r\n                                <form onSubmit={formik.handleSubmit}>\r\n                                    <ModalHeader>\r\n                                        Add detail for your game\r\n                                    </ModalHeader>\r\n                                    <ModalCloseButton />\r\n                                    <ModalBody pb={6}>\r\n                                        {\" \"}\r\n                                        <FormControl\r\n                                            isRequired\r\n                                            isInvalid={\r\n                                                formik.touched.name &&\r\n                                                formik.errors.name\r\n                                            }\r\n                                        >\r\n                                            <FormLabel mt={4}>\r\n                                                Name game\r\n                                            </FormLabel>\r\n                                            <Input\r\n                                                ref={nameRef}\r\n                                                type=\"text\"\r\n                                                placeholder=\"Ex: Sky Raptor\"\r\n                                                {...formik.getFieldProps(\r\n                                                    \"name\"\r\n                                                )}\r\n                                            />\r\n                                            <FormErrorMessage>\r\n                                                {formik.errors.name}\r\n                                            </FormErrorMessage>\r\n                                        </FormControl>\r\n                                        <FormControl\r\n                                            isInvalid={\r\n                                                formik.touched.linkIOS &&\r\n                                                formik.errors.linkIOS\r\n                                            }\r\n                                        >\r\n                                            <FormLabel mt={4}>\r\n                                                Link store IOS\r\n                                            </FormLabel>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Ex: https://apps.apple.com/us/app/sky-raptor/id1518974662\"\r\n                                                {...formik.getFieldProps(\r\n                                                    \"linkIOS\"\r\n                                                )}\r\n                                            />\r\n                                            <FormErrorMessage>\r\n                                                {formik.errors.linkIOS}\r\n                                            </FormErrorMessage>\r\n                                        </FormControl>\r\n                                        <FormControl\r\n                                            isInvalid={\r\n                                                formik.touched.linkAndroid &&\r\n                                                formik.errors.linkAndroid\r\n                                            }\r\n                                        >\r\n                                            <FormLabel mt={4}>\r\n                                                Link store Android\r\n                                            </FormLabel>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Ex: https://play.google.com/store/apps/details?id=com.skyraptor.spaceshooter\"\r\n                                                {...formik.getFieldProps(\r\n                                                    \"linkAndroid\"\r\n                                                )}\r\n                                            />\r\n                                            <FormErrorMessage>\r\n                                                {formik.errors.linkAndroid}\r\n                                            </FormErrorMessage>\r\n                                        </FormControl>\r\n                                    </ModalBody>\r\n                                    <ModalFooter>\r\n                                        <Button\r\n                                            colorScheme=\"teal\"\r\n                                            mr={3}\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button onClick={onClose}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </ModalFooter>\r\n                                </form>\r\n                            </ModalContent>\r\n                        </Modal>\r\n                    )}\r\n                </Formik>\r\n                {listGameState.map((game, index) => (\r\n                    <GameItem key={game.id} gameDetail={game} />\r\n                ))}\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nHomePage.propTypes = {};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        listGame: state.listGameStore,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addGameDispatch: (payload) => dispatch(AddGameAction(payload)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","D:\\Tool\\hyper-ads-export\\src\\components\\IdeaItem\\index.jsx",["171","172"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    Input,\r\n    Box,\r\n    Button,\r\n    Text,\r\n    useDisclosure,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalCloseButton,\r\n    ModalBody,\r\n    FormControl,\r\n    FormLabel,\r\n    ModalFooter,\r\n    FormErrorMessage,\r\n    useToast,\r\n    AlertDialog,\r\n    AlertDialogOverlay,\r\n    AlertDialogContent,\r\n    AlertDialogHeader,\r\n    AlertDialogBody,\r\n    AlertDialogFooter,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowDown3, Trash } from \"iconsax-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { DeleteIdeaAction, UpdateIdeaAction } from \"../../action\";\r\nconst IdeaItem = (props) => {\r\n    const { idGame, ideaDetail, deleteIdeaDispatch, updateIdeaDispatch } =\r\n        props;\r\n    const { id } = ideaDetail;\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [ideaGameState, setIdeaGameState] = React.useState(ideaDetail);\r\n    const [isOpenAlert, setIsOpenAlert] = React.useState(false);\r\n    const onCloseAlert = () => setIsOpenAlert(false);\r\n    const cancelAlertRef = React.useRef();\r\n\r\n    const toast = useToast();\r\n    const nameRef = React.useRef();\r\n    const finalRef = React.useRef();\r\n\r\n    const handleSubmit = async (values, { setSubmitting, resetForm }) => {\r\n        const { name, linkBaseCode } = values;\r\n        const payload = {\r\n            id,\r\n            name,\r\n            linkBaseCode,\r\n            currentGame: idGame,\r\n        };\r\n        setIdeaGameState({\r\n            id,\r\n            name,\r\n            linkBaseCode,\r\n        });\r\n        updateIdeaDispatch(payload);\r\n        setSubmitting(false);\r\n        toast({\r\n            position: \"top\",\r\n            title: \"Edit game successfully!\",\r\n            status: \"success\",\r\n            duration: 2000,\r\n            isClosable: true,\r\n        });\r\n        let timeOut = setTimeout(() => {\r\n            onClose();\r\n            clearTimeout(timeOut);\r\n        }, 2000);\r\n    };\r\n    const handleDelete = async () => {\r\n        const payload = {\r\n            id,\r\n            currentGame: idGame,\r\n        };\r\n        deleteIdeaDispatch(payload);\r\n        toast({\r\n            position: \"top\",\r\n            title: \"Delete game successfully!\",\r\n            status: \"success\",\r\n            duration: 2000,\r\n            isClosable: true,\r\n        });\r\n        let timeOut = setTimeout(() => {\r\n            onCloseAlert();\r\n            onClose();\r\n            clearTimeout(timeOut);\r\n        }, 2000);\r\n    };\r\n    return (\r\n        <Box my=\"3\" ml=\"3\">\r\n            <Formik\r\n                initialValues={{\r\n                    name: ideaGameState.name,\r\n                    linkBaseCode: ideaGameState.linkBaseCode,\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    name: Yup.string().required(\"Required\"),\r\n                    linkBaseCode: Yup.string().required(\"Required\"),\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {(formik) => (\r\n                    <Modal\r\n                        initialFocusRef={nameRef}\r\n                        finalFocusRef={finalRef}\r\n                        isOpen={isOpen}\r\n                        onClose={onClose}\r\n                    >\r\n                        <ModalOverlay />\r\n                        <ModalContent>\r\n                            <form onSubmit={formik.handleSubmit}>\r\n                                <ModalHeader>Edit Idea</ModalHeader>\r\n                                <ModalCloseButton />\r\n                                <ModalBody pb={6}>\r\n                                    {\" \"}\r\n                                    <FormControl\r\n                                        isRequired\r\n                                        isInvalid={\r\n                                            formik.touched.name &&\r\n                                            formik.errors.name\r\n                                        }\r\n                                    >\r\n                                        <FormLabel mt={4}>Name game</FormLabel>\r\n                                        <Input\r\n                                            ref={nameRef}\r\n                                            type=\"text\"\r\n                                            placeholder=\"Ex: Sky Raptor\"\r\n                                            {...formik.getFieldProps(\"name\")}\r\n                                        />\r\n                                        <FormErrorMessage>\r\n                                            {formik.errors.name}\r\n                                        </FormErrorMessage>\r\n                                    </FormControl>\r\n                                    <FormControl\r\n                                        isRequired\r\n                                        isInvalid={\r\n                                            formik.touched.linkBaseCode &&\r\n                                            formik.errors.linkBaseCode\r\n                                        }\r\n                                    >\r\n                                        <FormLabel mt={4}>\r\n                                            Link base code\r\n                                        </FormLabel>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Ex: https://apps.apple.com/us/app/sky-raptor/id1518974662\"\r\n                                            {...formik.getFieldProps(\r\n                                                \"linkBaseCode\"\r\n                                            )}\r\n                                        />\r\n                                        <FormErrorMessage>\r\n                                            {formik.errors.linkBaseCode}\r\n                                        </FormErrorMessage>\r\n                                    </FormControl>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button\r\n                                        colorScheme=\"teal\"\r\n                                        mr={3}\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                    <Button\r\n                                        colorScheme=\"red\"\r\n                                        onClick={() => setIsOpenAlert(true)}\r\n                                        rightIcon={\r\n                                            <Trash\r\n                                                size=\"20\"\r\n                                                schemeColor=\"currentColor\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        Delete Idea\r\n                                    </Button>\r\n                                </ModalFooter>\r\n                            </form>\r\n                        </ModalContent>\r\n                    </Modal>\r\n                )}\r\n            </Formik>\r\n            <Box display=\"flex\" flexWrap=\"nowrap\">\r\n                <Link to={ideaGameState.id}>\r\n                    <Button borderRightRadius=\"0\" colorScheme=\"teal\">\r\n                        <Text>{ideaGameState.name}</Text>\r\n                    </Button>\r\n                </Link>\r\n                <Button\r\n                    px=\"0\"\r\n                    borderLeftRadius=\"0\"\r\n                    onClick={onOpen}\r\n                    colorScheme=\"teal\"\r\n                >\r\n                    <ArrowDown3 m=\"0\" bg=\"tomato\" color=\"currentColor\" />\r\n                </Button>\r\n            </Box>\r\n\r\n            <AlertDialog\r\n                isOpen={isOpenAlert}\r\n                leastDestructiveRef={cancelAlertRef}\r\n                onClose={onCloseAlert}\r\n            >\r\n                <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                            Delete this idea?\r\n                        </AlertDialogHeader>\r\n\r\n                        <AlertDialogBody>\r\n                            Are you sure? You can't undo this action afterwards.\r\n                        </AlertDialogBody>\r\n\r\n                        <AlertDialogFooter>\r\n                            <Button ref={cancelAlertRef} onClick={onCloseAlert}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                colorScheme=\"red\"\r\n                                onClick={handleDelete}\r\n                                ml={3}\r\n                                rightIcon={\r\n                                    <Trash\r\n                                        size=\"20\"\r\n                                        schemeColor=\"currentColor\"\r\n                                    />\r\n                                }\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        </Box>\r\n    );\r\n};\r\n\r\nIdeaItem.propTypes = {};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateIdeaDispatch: (payload) => dispatch(UpdateIdeaAction(payload)),\r\n        deleteIdeaDispatch: (payload) => dispatch(DeleteIdeaAction(payload)),\r\n    };\r\n};\r\nexport default connect(null, mapDispatchToProps)(IdeaItem);\r\n","D:\\Tool\\hyper-ads-export\\src\\action\\index.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"173","replacedBy":"177"},{"ruleId":"175","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":14,"column":5,"nodeType":"181","messageId":"182","endLine":14,"endColumn":9},{"ruleId":"179","severity":1,"message":"183","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"173","replacedBy":"184"},{"ruleId":"175","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":14,"column":19,"nodeType":"188","messageId":"189","endLine":14,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":107,"column":33,"nodeType":"181","messageId":"192","endLine":107,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":144,"column":33,"nodeType":"181","messageId":"192","endLine":144,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":189,"column":33,"nodeType":"181","messageId":"192","endLine":189,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":214,"column":33,"nodeType":"181","messageId":"192","endLine":214,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":297,"column":33,"nodeType":"181","messageId":"192","endLine":297,"endColumn":39},{"ruleId":"186","severity":1,"message":"187","line":331,"column":36,"nodeType":"188","messageId":"189","endLine":331,"endColumn":38},{"ruleId":"186","severity":1,"message":"187","line":334,"column":43,"nodeType":"188","messageId":"189","endLine":334,"endColumn":45},{"ruleId":"186","severity":1,"message":"187","line":337,"column":43,"nodeType":"188","messageId":"189","endLine":337,"endColumn":45},{"ruleId":"186","severity":1,"message":"187","line":340,"column":43,"nodeType":"188","messageId":"189","endLine":340,"endColumn":45},{"ruleId":"186","severity":1,"message":"187","line":343,"column":43,"nodeType":"188","messageId":"189","endLine":343,"endColumn":45},{"ruleId":"186","severity":1,"message":"187","line":346,"column":43,"nodeType":"188","messageId":"189","endLine":346,"endColumn":45},{"ruleId":"186","severity":1,"message":"187","line":349,"column":43,"nodeType":"188","messageId":"189","endLine":349,"endColumn":45},{"ruleId":"186","severity":1,"message":"187","line":352,"column":43,"nodeType":"188","messageId":"189","endLine":352,"endColumn":45},{"ruleId":"190","severity":1,"message":"191","line":418,"column":29,"nodeType":"181","messageId":"192","endLine":418,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":453,"column":29,"nodeType":"181","messageId":"192","endLine":453,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":498,"column":29,"nodeType":"181","messageId":"192","endLine":498,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":523,"column":29,"nodeType":"181","messageId":"192","endLine":523,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":606,"column":29,"nodeType":"181","messageId":"192","endLine":606,"endColumn":35},{"ruleId":"179","severity":1,"message":"193","line":3,"column":27,"nodeType":"181","messageId":"182","endLine":3,"endColumn":30},{"ruleId":"173","replacedBy":"194"},{"ruleId":"175","replacedBy":"195"},{"ruleId":"179","severity":1,"message":"183","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"196","line":1,"column":28,"nodeType":"181","messageId":"182","endLine":1,"endColumn":34},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":17},{"ruleId":"179","severity":1,"message":"183","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"173","replacedBy":"197"},{"ruleId":"175","replacedBy":"198"},{"ruleId":"179","severity":1,"message":"199","line":19,"column":11,"nodeType":"181","messageId":"182","endLine":19,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":36,"column":14,"nodeType":"188","messageId":"189","endLine":36,"endColumn":16},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":17},{"ruleId":"179","severity":1,"message":"183","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":17},{"ruleId":"173","replacedBy":"200"},{"ruleId":"175","replacedBy":"201"},{"ruleId":"179","severity":1,"message":"183","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"183","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"202","line":12,"column":15,"nodeType":"181","messageId":"182","endLine":12,"endColumn":28},{"ruleId":"173","replacedBy":"203"},{"ruleId":"175","replacedBy":"204"},{"ruleId":"173","replacedBy":"205"},{"ruleId":"175","replacedBy":"206"},{"ruleId":"179","severity":1,"message":"183","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},{"ruleId":"179","severity":1,"message":"207","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"183","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":17},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],["208"],["209"],"no-unused-vars","'Game' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.",["208"],["209"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'result' is already defined.","redeclared","'set' is defined but never used.",["208"],["209"],"'useRef' is defined but never used.",["208"],["209"],"'params' is assigned a value but never used.",["208"],["209"],"'getAllFromDir' is assigned a value but never used.",["208"],["209"],["208"],["209"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]